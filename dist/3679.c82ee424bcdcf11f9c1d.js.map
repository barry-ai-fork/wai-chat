{"version":3,"file":"3679.c82ee424bcdcf11f9c1d.js","mappings":"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","sources":["webpack://wai/./src/lib/ptp/protobuf/protobuf.js"],"sourcesContent":["/**\n * DO NOT EDIT\n * -- this file is generated by minipbjs v0.2.5\n */\n\nconst protobuf = require(\"protobufjs/minimal\") ;\nprotobuf.util.Long = require('long');\nvar $root = protobuf.roots;\n\n// type system from protobuf\n// notice: minimal build protobuf library does not contains 'types'\nvar $wires = protobuf.types ? protobuf.types.basic : { 'double': 1, 'float': 5, 'int32': 0, 'uint32': 0, 'sint32': 0, 'fixed32': 5, 'sfixed32': 5, 'int64': 0, 'uint64': 0, 'sint64': 0, 'fixed64': 1, 'sfixed64': 1, 'bool': 0, 'string': 2, 'bytes': 2 };\nvar $packed = protobuf.types ? protobuf.types.packed : { 'double': 1, 'float': 5, 'int32': 0, 'uint32': 0, 'sint32': 0, 'fixed32': 5, 'sfixed32': 5, 'int64': 0, 'uint64': 0, 'sint64': 0, 'fixed64': 1, 'sfixed64': 1, 'bool': 0 };\nvar $types = Object.keys($wires);\n\nfunction invalid({ name, repeated, map, keyType }, expected) {\n    return name + ': ' + expected + (repeated && expected !== 'array' ? '[]' : map && expected !== 'object' ? '{k:'+keyType+'}' : '') + ' expected';\n}\nvar keyVerifyMap = { int32: 'key32Re', uint32: 'key32Re', sint32: 'key32Re', fixed32: 'key32Re', sfixed32: 'key32Re', int64: 'key64Re', uint64: 'key64Re', sint64: 'key64Re', fixed64: 'key64Re', sfixed64: 'key64Re', bool: 'key2Re' };\nfunction verifyKey(type, message, fieldInfo) {\n    if (keyVerifyMap[type]) {\n        if (!protobuf.util[keyVerifyMap[type]].test(message)) {\n            fieldInfo.keyType = type;\n            return invalid(fieldInfo, 'key')\n        }\n        return null;\n    }\n    return null;\n};\nvar type32Map = { int32: 1, uint32: 1, sint32: 1, fixed32: 1, sfixed32: 1 };\nvar type64Map = { int64: 1, uint64: 1, sint64: 1, fixed64: 1, sfixed64: 1 };\nvar floatOrDoubleMap = { float: 1, double: 1 };\nvar util = protobuf.util;\n\nvar $verifier = {\n    '$': function(type, message, fieldInfo, field) {\n        if (field === '$1') {\n            fieldInfo.map = true;\n            return verifyKey(type, message, fieldInfo);\n        }\n        // basic type\n        if ($wires[type] !== undefined) {\n            if (type32Map[type]) {\n                if (typeof message !== 'number') return invalid(fieldInfo, 'number');\n            } else if (type64Map[type]) {\n                if (!util.isInteger(message) && !(message && util.isInteger(message.low) && util.isInteger(message.high))) {\n                    return invalid(fieldInfo, 'integer|Long');\n                }\n            } else if (floatOrDoubleMap[type]) {\n                if (typeof message !== 'number') return invalid(fieldInfo, 'float|double');\n            } else if (type === 'bool') {\n                if (typeof message !== 'boolean') return invalid(fieldInfo, 'boolean');\n            } else if (type === 'string') {\n                if (!util.isString(message)) return invalid(fieldInfo, 'string');\n            } else if (type === 'bytes') {\n                if(!(message && typeof message.length ==='number' || util.isString(message))) {\n                    return invalid(fieldInfo, 'invalid bytes');\n                }\n            }\n            return null;\n        }\n        if ($root[type].resolvedType) return $root[type].resolvedType[message] ? null : invalid(fieldInfo, 'enum value');\n        return $root[type].verify(message);\n    },\n};\n// wrappers\nvar $reader = {\n    '$': function(type) {\n        if ($reader[type]) {\n            return $reader[type].call(this);\n        }\n        return $root[type].decode(this, this.uint32());\n    }\n}, $writer = {\n    '$': function(type, message, id) {\n        var wire = $wires[type];\n        if (wire === undefined) {\n            this.uint32((id << 3 | 2) >> 0).fork();\n            return $root[type].encode(message, this).ldelim();\n        }\n        return $writer[type].call(this.uint32(id << 3 | wire), message);\n    }\n};\n\nfor (var i = 0; i < $types.length; i ++) {\n    $reader[$types[i]] = protobuf.Reader.prototype[$types[i]];\n    $writer[$types[i]] = protobuf.Writer.prototype[$types[i]];\n}\n\nfunction $createConverter(cfgs) {\n    var converter = {};\n    for (var i = 0; i < cfgs.length; i ++) {\n        var cfg = cfgs[i];\n        for (var j = 0; j < cfg.types.length; j ++) {\n            converter[cfg.types[j]] = cfg.convf;\n        }\n    }\n    return converter;\n}\n\n// fromObject\nvar $conv_object = $createConverter([\n    {\n        'types': [ 'bool' ],\n        'convf': Boolean\n    }, {\n        'types': [ 'string' ],\n        'convf': String\n    }, {\n        'types': [ 'float', 'double' ],\n        'convf': Number\n    }, {\n        'types': [ 'uint32', 'fixed32' ],\n        'convf': function(value) { return value >>> 0; }\n    }, {\n        'types': [ 'int32', 'sint32', 'sfixed32' ],\n        'convf': function(value) { return value | 0; }\n    }, {\n        'types': [ 'int64', 'sint64', 'fixed64', 'sfixed64', 'uint64' ],\n        'convf': function(value, type) {\n            var ret = undefined;\n            if (protobuf.util.Long) {\n                ret = protobuf.util.Long.fromValue(value);\n                ret.unsigned = type.charAt(0) === 'u';\n            } else if (typeof value === 'object') {\n                ret = new protobuf.util.LongBits(value.low >>> 0, value.high >>> 0).toNumber(type.charAt(0) === 'u');\n            } else if (typeof value === 'string') {\n                ret = parseInt(value, 10);\n            } else if (typeof value === 'number') {\n                ret = value;\n            }\n            return ret;\n        }\n    }, {\n        'types': [ 'bytes' ],\n        'convf': function(value, type) {\n            var ret = undefined;\n            if (typeof value === 'string') {\n                ret = protobuf.util.newBuffer(protobuf.util.base64.length(value))\n                protobuf.util.base64.decode(value, ret, 0);\n            } else if (value.length) {\n                ret = value;\n            }\n            return ret;\n        }\n    }, {\n        'types': [ '$' ],\n        'convf': function(value, type) {\n            if ($conv_object[type]) {\n                return $conv_object[type].call(null, value, type);\n            } else if (!$root[type].fromObject) {\n                // enum\n                var ret = $root[type][value];\n                return typeof ret === 'string' ? $root[type][ret] : ret;\n            }\n            return $root[type].fromObject(value);\n        }\n    }\n]);\n\n// toObject\nvar $conv_message = $createConverter([\n    {\n        'types': [ 'float', 'double' ],\n        'convf': function(value, type, options) {\n            return options.json && !isFinite(value) ? String(value) : value;\n        }\n    }, {\n        'types': [ 'int64', 'sint64', 'fixed64', 'sfixed64', 'uint64' ],\n        'convf': function(value, type, options) {\n            if (typeof value === 'number') {\n                return options.longs === String ? String(value) : value;\n            }\n            if (options.longs === String) {\n                return protobuf.util.Long.prototype.toString.call(value);\n            } else if (options.longs === Number) {\n                return new protobuf.util.LongBits(value.low >>> 0, value.high >>> 0).toNumber(type.charAt(0) === 'u');\n            }\n            return value;\n        }\n    }, {\n        'types': [ 'bytes' ],\n        'convf': function(value, type, options) {\n            if (options.bytes === String) {\n                return protobuf.util.base64.encode(value, 0, value.length);\n            } else if (options.bytes === Array) {\n                return Array.prototype.slice.call(value);\n            }\n            if (Array.isArray(value)) {\n                return protobuf.util.newBuffer(value);\n            }\n            return value;\n        }\n    }, {\n        'types': [ '$' ],\n        'convf': function(value, type, options) {\n            if ($conv_message[type]) {\n                return $conv_message[type].call(null, value, type, options);\n            } else if ($wires[type] === undefined) {\n                if ($root[type].toObject) {\n                    return $root[type].toObject(value, options);\n                }\n                // enum\n                return options.enums === String ? $root[type][value] : value;\n            }\n            return value;\n        }\n    }\n]);\n\n// namespace builder\n(function _(namespace, path, parent, inner) {\n    for (var i = 0, keys = Object.keys(namespace); i < keys.length; i ++) {\n        var key = keys[i];\n        if (namespace[key]['$'] && Object.keys(namespace[key]['$']).every(function(k) { return Number(k); })) {\n            // protobuf.type\n            if (parent[key]) throw Error('field ' + path + '.' + key + ' has already existed');\n            parent[key] = function(payloads, key) {\n                /**\n                 * Constructor function wrapper for the all protobuf type.\n                 * @constructor\n                 * @param [props] Properties to set with\n                 */\n                function C(props) {\n                    for (var id in payloads) {\n                        var payload = payloads[id];\n                        // initialize object/array fields\n                        if (payload[1].charAt(0) === '{') {\n                            this[payload[0]] = {};\n                        } else if (payload[1].charAt(0) === '[' || payload[1].charAt(0) === '<') {\n                            this[payload[0]] = [];\n                            }\n                        }\n                        if (props) {\n                            for (var keys = Object.keys(props), i = 0; i < keys.length; ++i) {\n                                props[keys[i]] != null && (this[keys[i]] = props[keys[i]]);\n                        }\n                    }\n                }\n\n                // set prototypes and collect inner namespace for map fields\n                var $namespace = {};\n                for (var id in payloads) {\n                    var payload = payloads[id];\n                    var type = payload[1];\n                    if (type.charAt(0) === '{') {\n                        C.prototype[payload[0]] = protobuf.util.emptyObject;\n                        // collect all map fields\n                        // { key: value } => { '1': [ '$1', <key>, null ], '2': [ '$2', <value>, null ] }\n                        $namespace[type] = {\n                            '$': type.substring(1).split(',')\n                                .map(function(t, i) { return ['$' + (i + 1), t, null] })\n                                .reduce(function(m, o, i) { m[i + 1] = o; return m; }, {})\n                        };\n                    } else if (type.charAt(0) === '[' || type.charAt(0) === '<') {\n                        C.prototype[payload[0]] = protobuf.util.emptyArray;\n                    } else if (type === 'bytes') {\n                        C.prototype[payload[0]] = protobuf.util.newBuffer([]);\n                    } else {\n                        if (payload[2] && payload[2].hasOwnProperty('low') && payload[2].hasOwnProperty('high')) {\n                            C.prototype[payload[0]] = protobuf.util.Long.fromBits(payload[2].low, payload[2].high, payload[2].unsigned);\n                        } else {\n                            C.prototype[payload[0]] = payload[2];\n                        }\n                    }\n                }\n\n                /**\n                 * Creates a new instance using the specified properties.\n                 * @function create\n                 * @static\n                 * @param [props] Properties to set with\n                 * @returns {C} instance\n                 */\n                C.create = function(props) {\n                    return new parent[key](props);\n                };\n\n                /**\n                 * Decodes a message from the specified reader or buffer.\n                 * @function decode\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} length Message length if known beforehand\n                 * @returns {C} instance\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                C.decode = function(reader, length) {\n                    if (!(reader instanceof protobuf.Reader)) reader = protobuf.Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length;\n                    var message = new parent[key]();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        var id = tag >>> 3;\n                        if (id > 0 && payloads[id]) {\n                            var field = payloads[id][0];\n                            var type = payloads[id][1];\n                            if (type.charAt(0) === '{') {\n                                // map field\n                                if (message[field] === protobuf.util.emptyObject) {\n                                    message[field] = {};\n                                }\n                                // decode map fields from inner namespace\n                                var $message = parent[key].$namespace[type].decode(reader, reader.uint32());\n                                message[field][$message['$1']] = $message['$2'];\n                            } else if (type.charAt(0) === '[' || type.charAt(0) === '<') {\n                                // repeated field\n                                type = type.substring(1);\n                                if (!(message[field] && message[field].length)) {\n                                    message[field] = [];\n                                }\n                                if ($packed[type] !== undefined && (tag & /*2^3-1=*/7) === 2) {\n                                    // packed repeated\n                                    var $end = reader.uint32() + reader.pos;\n                                    while (reader.pos < $end) {\n                                        message[field].push($reader['$'].call(reader, type));\n                                    }\n                                } else {\n                                    message[field].push($reader['$'].call(reader, type));\n                                }\n                            } else {\n                                // non-repeated field\n                                message[field] = $reader['$'].call(reader, type);\n                            }\n                        } else {\n                            // unknown field\n                            reader.skipType(tag & /*2^3-1=*/7);\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} length Message length if known beforehand\n                 * @returns {C} instance\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                C.decodeDelimited = function(reader) {\n                    if (!(reader instanceof protobuf.Reader)) reader = protobuf.Reader.create(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Encodes the specified C message. Does not implicitly verify messages.\n                 * @function encode\n                 * @static\n                 * @param {C} message or plain object to encode\n                 * @param {$protobuf.Writer} writer Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                C.encode = function(message, writer) {\n                    if (!writer) writer = protobuf.Writer.create();\n                    for (var id in payloads) {\n                        var field = payloads[id][0];\n                        var type = payloads[id][1];\n                        if (type.charAt(0) === '{') {\n                            // map field\n                            if (message[field] != null && message.hasOwnProperty(field)) {\n                                for (var i = 0, keys = Object.keys(message[field]); i < keys.length; ++ i) {\n                                    writer.uint32((id << 3 | 2) >> 0).fork();\n                                    // encode map fields from inner namespace\n                                    parent[key].$namespace[type].encode({ '$1': keys[i], '$2': message[field][keys[i]] }, writer).ldelim();\n                                }\n                            }\n                        } else if (type.charAt(0) === '[' || type.charAt(0) === '<') {\n                            // repeated field\n                            var packed = type.charAt(0) === '<';\n                            type = type.substring(1);\n                            var array = message[field];\n                            if (array != null && array.length) {\n                                if (packed && $packed[type] !== undefined) {\n                                    // packed repeated\n                                    writer.uint32((id << 3 | 2) >> 0).fork();\n                                    for (var i = 0; i < array.length; i ++) {\n                                        $writer[type].call(writer, array[i]);\n                                    }\n                                    writer.ldelim();\n                                } else {\n                                    for (var i = 0; i < array.length; i ++) {\n                                        $writer['$'].call(writer, type, array[i], id);\n                                    }\n                                }\n                            }\n                        } else {\n                            // non-repeated field\n                            if (message[field] != null && message.hasOwnProperty(field)) {\n                                $writer['$'].call(writer, type, message[field], id);\n                            }\n                        }\n                    }\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified C message, length delimited. Does not implicitly verify messages.\n                 * @function encode\n                 * @static\n                 * @param {C} message or plain object to encode\n                 * @param {$protobuf.Writer} writer Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                C.encodeDelimited = function(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Creates a C message from plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @param {C} message\n                 */\n                C.fromObject = function(object) {\n                    if (object instanceof parent[key]) return object;\n                    var message = new parent[key]();\n                    for (var id in payloads) {\n                        var field = payloads[id][0];\n                        var type = payloads[id][1];\n                        var property = object[field];\n                        if (type.charAt(0) === '{') {\n                            // map field\n                            if (!property) continue;\n                            if (typeof property !== 'object') throw TypeError(path + '.' + key + '.' + field + ': object expected');\n                            var map = {};\n                            var vtype = type.substring(1).split(',')[1];\n                            for (var i = 0, keys = Object.keys(property); i < keys.length; ++ i) {\n                                map[keys[i]] = $conv_object['$'].call(null, property[keys[i]], vtype);\n                            }\n                            message[field] = map;\n                        } else if (type.charAt(0) === '[' || type.charAt(0) === '<') {\n                            // repeated field\n                            if (!property) continue;\n                            if (!Array.isArray(property)) throw TypeError(path + '.' + key + '.' + type + ': arary excepted');\n                            var array = [];\n                            type = type.substring(1);\n                            for (var i = 0; i < property.length; i ++) {\n                                array[i] = $conv_object['$'].call(null, property[i], type);\n                            }\n                            message[field] = array;\n                        } else {\n                            // non-repeated field\n                            if (property != null) {\n                                message[field] = $conv_object['$'].call(null, property, type);\n                            }\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a C message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @static\n                 * @param {C} message protobuf message\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                C.toObject = function(message, options) {\n                    options = options || {};\n                    var object = {};\n                    for (var id in payloads) {\n                        var field = payloads[id][0];\n                        var type = payloads[id][1];\n                        var property = message[field];\n                        if (type.charAt(0) === '{') {\n                            // map field\n                            if (options.objects || options.defaults) {\n                                object[field] = {};\n                            }\n                            var keys = property ? Object.keys(property) : [];\n                            if (keys.length) {\n                                var map = {};\n                                var vtype = type.substring(1).split(',')[1];\n                                for (var i = 0; i < keys.length; i ++) {\n                                    map[keys[i]] = $conv_message['$'].call(null, property[keys[i]], vtype, options);\n                                }\n                                object[field] = map;\n                            }\n                        } else if (type.charAt(0) === '[' || type.charAt(0) === '<') {\n                            // repeated field\n                            if (options.arrays || options.defaults) {\n                                object[field] = [];\n                            }\n                            if (property && property.length) {\n                                var array = [];\n                                type = type.substring(1);\n                                for (var i = 0; i < property.length; i ++) {\n                                    array[i] = $conv_message['$'].call(null, property[i], type, options);\n                                }\n                                object[field] = array;\n                            }\n                        } else {\n                            // non-repeated field\n                            // TODO support for Enum type\n                            if (options.defaults) {\n                                object[field] = $conv_message['$'].call(null, payloads[id][2], type, options);\n                            }\n                            if (property != null && message.hasOwnProperty(field)) {\n                                object[field] = $conv_message['$'].call(null, property, type, options);\n                            }\n                        }\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this C to JSON.\n                 * @function toJSON\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                C.prototype.toJSON = function() {\n                    return this.constructor.toObject(this, protobuf.util.toJSONOptions);\n                };\n\n                /**\n                 * Verifies C message.\n                 * @function verify\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                C.verify = function(message) {\n                    if (typeof message !=='object' || message === null) return 'object expected'\n                    for (var id in payloads) {\n                        var field = payloads[id][0];\n                        var type = payloads[id][1];\n                        var fieldName = path + '.' + key + '.' + field;\n                        if (type.charAt(0) === '{') {\n                            // map field\n                            if (message[field] != null && message.hasOwnProperty(field)) {\n                                if (!protobuf.util.isObject(message[field])) return invalid({ name: fieldName, map: true }, 'object');\n                                var keys = Object.keys(message[field]);\n                                for (var i = 0; i < keys.length; ++i) {\n                                    parent[key].$namespace[type].$fieldName = fieldName\n                                    var error = parent[key].$namespace[type].verify({ '$1': keys[i], '$2': message[field][keys[i]] });\n                                    if (error) return error;\n                                }\n                            }\n                        } else if (type.charAt(0) === '[' || type.charAt(0) === '<') {\n                            // repeated field\n                            type = type.substring(1);\n                            var array = message[field];\n                            if (!Array.isArray(array)) {\n                                return invalid({ name: fieldName, repeated: true }, 'array')\n                            }\n                            for (var i = 0; i < array.length; i ++) {\n                                var error = $verifier['$'](type, array[i], { name: fieldName + '['+i+']' , repeated: true });\n                                if (error) return error;\n                            }\n                        } else {\n                            // non-repeated field\n                            if (field === '$1' || field === '$2') fieldName = this.$fieldName;\n                            if (message[field] != null && message.hasOwnProperty(field)) {\n                                var error = $verifier['$'](type, message[field], { name: fieldName }, field);\n                                if (error) return error;\n                            }\n                        }\n                    }\n                    return null;\n                };\n\n                // create inner namespace for each map field\n                if (Object.keys($namespace).length) {\n                    C.$namespace = _($namespace, path + '.' + key, C.$namespace || {}, true);\n                }\n\n                return C;\n            }(namespace[key]['$'], key);\n\n            // exposing non-inner type to $root\n            !inner && ($root[path + '.' + key] = parent[key]);\n        } else if (namespace[key]['@'] && Object.values(namespace[key]['@']).every(function(v) { return Number(v) === v; })) {\n            // protobuf.enum\n            parent[key] = function(payloads, key) {\n                var keys = Object.keys(payloads);\n                var values = {};\n                for (var i = 0; i < keys.length; i ++) {\n                    values[values[keys[i]] = payloads[keys[i]]] = keys[i];\n                }\n                var vals = {};\n                keys.forEach(function (i) { vals[values[i]] = 1; });\n                values.resolvedType = vals;\n                return values;\n            }(namespace[key]['@'], key);\n            // exposing non-inner enum to $root\n            !inner && ($root[path + '.' + key] = parent[key]);\n        }\n        // delete parsed type and enum\n        delete namespace[key]['$'];\n        delete namespace[key]['@'];\n        parent[key] = _(namespace[key], path ? path + '.' + key : key, parent[key] || {});\n    }\n    return parent;\n})({\n    default: {\n        PTP: {\n            Auth: {\n                AuthLoginReq: {\n                    '$': {\"1\":[\"sign\",\"bytes\",[]],\"2\":[\"ts\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}],\"3\":[\"uid\",\"string\",\"\"],\"4\":[\"address\",\"string\",\"\"]}\n                },\n                AuthLoginRes: {\n                    '$': {\"1\":[\"payload\",\"string\",\"\"],\"100\":[\"err\",\"uint32\",0]}\n                },\n                AuthNativeReq: {\n                    '$': {\"1\":[\"accountId\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}],\"2\":[\"entropy\",\"string\",\"\"],\"3\":[\"session\",\"string\",\"\"]}\n                },\n                AuthNativeRes: {\n                    '$': {}\n                },\n                AuthPreLoginReq: {\n                    '$': {\"1\":[\"sign1\",\"bytes\",[]],\"2\":[\"address1\",\"string\",\"\"],\"3\":[\"sign2\",\"bytes\",[]],\"4\":[\"address2\",\"string\",\"\"],\"5\":[\"ts\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}]}\n                },\n                AuthPreLoginRes: {\n                    '$': {\"1\":[\"uid\",\"string\",\"\"],\"2\":[\"ts\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}],\"100\":[\"err\",\"uint32\",0]}\n                },\n                AuthStep1Req: {\n                    '$': {\"1\":[\"p\",\"bytes\",[]]}\n                },\n                AuthStep1Res: {\n                    '$': {\"1\":[\"q\",\"bytes\",[]],\"2\":[\"address\",\"string\",\"\"],\"3\":[\"sign\",\"bytes\",[]],\"6\":[\"ts\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}],\"100\":[\"err\",\"uint32\",0]}\n                },\n                AuthStep2Req: {\n                    '$': {\"1\":[\"ts\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}],\"2\":[\"address\",\"string\",\"\"],\"3\":[\"sign\",\"bytes\",[]]}\n                },\n                AuthStep2Res: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                },\n                UpdateProfileReq: {\n                    '$': {\"1\":[\"firstName\",\"string\",\"\"],\"2\":[\"lastName\",\"string\",\"\"],\"3\":[\"about\",\"string\",\"\"]}\n                },\n                UpdateProfileRes: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                },\n                UpdateUsernameReq: {\n                    '$': {\"1\":[\"username\",\"string\",\"\"]}\n                },\n                UpdateUsernameRes: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                },\n                UploadProfilePhotoReq: {\n                    '$': {\"1\":[\"id\",\"string\",\"\"],\"2\":[\"is_video\",\"bool\",false],\"3\":[\"thumbnail\",\"string\",\"\"]}\n                },\n                UploadProfilePhotoRes: {\n                    '$': {\"1\":[\"payload\",\"string\",\"\"],\"100\":[\"err\",\"uint32\",0]}\n                }\n            },\n            Chats: {\n                LoadChatsReq: {\n                    '$': {\"1\":[\"limit\",\"uint32\",0],\"2\":[\"offsetDate\",\"uint32\",0],\"3\":[\"archived\",\"bool\",false],\"4\":[\"withPinned\",\"bool\",false],\"5\":[\"lastLocalServiceMessage\",\"string\",\"\"]}\n                },\n                LoadChatsRes: {\n                    '$': {\"1\":[\"payload\",\"string\",\"\"],\"100\":[\"err\",\"uint32\",0]}\n                }\n            },\n            Common: {\n                AUTH_TYPE: {\n                    '@': {\"AUTH_TYPE_USERNAME\":0,\"AUTH_TYPE_EMAIL\":1,\"AUTH_TYPE_MOBILE\":2}\n                },\n                EncryptType: {\n                    '@': {\"EncryptType_Wallet\":0,\"EncryptType_Group\":1,\"EncryptType_Message\":2,\"EncryptType_Media\":3}\n                },\n                ERR: {\n                    '@': {\"NO_ERROR\":0,\"ERR_SYSTEM\":1,\"ERR_AUTH_LOGIN\":2,\"ERR_AUTH_NEED\":3}\n                },\n                FileInfo: {\n                    '$': {\"1\":[\"id\",\"string\",\"\"],\"2\":[\"size\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}],\"3\":[\"part\",\"uint32\",0],\"4\":[\"part_total\",\"uint32\",0],\"5\":[\"buf\",\"bytes\",[]],\"6\":[\"type\",\"string\",\"\"]}\n                },\n                MessageStoreRow: {\n                    '$': {\"1\":[\"message\",\"default.PTP.Common.PbMsg\",null],\"3\":[\"messageId\",\"uint32\",0],\"4\":[\"time\",\"uint32\",0],\"5\":[\"buf\",\"bytes\",[]]}\n                },\n                PbAction: {\n                    '$': {\"1\":[\"text\",\"string\",\"\"],\"2\":[\"type\",\"string\",\"\"]}\n                },\n                PbAiBot: {\n                    '$': {\"1\":[\"chatGptConfig\",\"default.PTP.Common.PbChatGpBotConfig\",null],\"3\":[\"enableAi\",\"bool\",false]}\n                },\n                PbBotInfo: {\n                    '$': {\"1\":[\"botId\",\"string\",\"\"],\"2\":[\"description\",\"string\",\"\"],\"4\":[\"menuButton\",\"default.PTP.Common.PbMenuButton\",null],\"5\":[\"commands\",\"<default.PTP.Common.PbCommands\",null],\"6\":[\"photo\",\"default.PTP.Common.PbPhoto\",null],\"7\":[\"aiBot\",\"default.PTP.Common.PbAiBot\",null]}\n                },\n                PbChat: {\n                    '$': {\"1\":[\"type\",\"string\",\"\"],\"2\":[\"id\",\"string\",\"\"],\"3\":[\"title\",\"string\",\"\"],\"4\":[\"usernames\",\"<default.PTP.Common.PbUsernames\",null],\"5\":[\"isMuted\",\"bool\",false],\"6\":[\"isMin\",\"bool\",false],\"7\":[\"hasPrivateLink\",\"bool\",false],\"8\":[\"isSignaturesShown\",\"bool\",false],\"9\":[\"accessHash\",\"string\",\"\"],\"10\":[\"isVerified\",\"bool\",false],\"11\":[\"isJoinToSend\",\"bool\",false],\"12\":[\"isJoinRequest\",\"bool\",false],\"13\":[\"isForum\",\"bool\",false],\"14\":[\"isListed\",\"bool\",false],\"15\":[\"settings\",\"default.PTP.Common.PbSettings\",null],\"16\":[\"lastMessage\",\"default.PTP.Common.PbMsg\",null]}\n                },\n                PbChatFolder: {\n                    '$': {\"1\":[\"id\",\"uint32\",0],\"2\":[\"title\",\"string\",\"\"],\"3\":[\"channels\",\"bool\",false],\"4\":[\"pinnedChatIds\",\"<string\",null],\"5\":[\"includedChatIds\",\"<string\",null],\"6\":[\"excludedChatIds\",\"<string\",null]}\n                },\n                PbChatGpBotConfig: {\n                    '$': {\"1\":[\"init_system_content\",\"string\",\"\"],\"2\":[\"api_key\",\"string\",\"\"],\"3\":[\"max_history_length\",\"uint32\",0],\"4\":[\"config\",\"default.PTP.Common.PbChatGptConfig\",null]}\n                },\n                PbChatGptConfig: {\n                    '$': {\"1\":[\"model\",\"string\",\"\"],\"2\":[\"temperature\",\"uint32\",0],\"3\":[\"max_tokens\",\"uint32\",0],\"4\":[\"presence_penalty\",\"uint32\",0]}\n                },\n                PbCommands: {\n                    '$': {\"1\":[\"botId\",\"string\",\"\"],\"2\":[\"command\",\"string\",\"\"],\"3\":[\"description\",\"string\",\"\"]}\n                },\n                PbContent: {\n                    '$': {\"1\":[\"text\",\"default.PTP.Common.PbText\",null],\"2\":[\"photo\",\"default.PTP.Common.PbPhoto\",null],\"3\":[\"voice\",\"default.PTP.Common.PbVoice\",null],\"4\":[\"action\",\"default.PTP.Common.PbAction\",null]}\n                },\n                PbFullInfo: {\n                    '$': {\"1\":[\"bio\",\"string\",\"\"],\"2\":[\"commonChatsCount\",\"uint32\",0],\"3\":[\"isBlocked\",\"bool\",false],\"4\":[\"noVoiceMessages\",\"bool\",false],\"5\":[\"botInfo\",\"default.PTP.Common.PbBotInfo\",null],\"6\":[\"pinnedMessageId\",\"uint32\",0]}\n                },\n                PbMenuButton: {\n                    '$': {\"1\":[\"type\",\"string\",\"\"],\"2\":[\"text\",\"string\",\"\"],\"3\":[\"url\",\"string\",\"\"]}\n                },\n                PbMessageEntity: {\n                    '$': {\"1\":[\"type\",\"string\",\"\"],\"2\":[\"offset\",\"uint32\",0],\"3\":[\"length\",\"uint32\",0],\"4\":[\"documentId\",\"string\",\"\"],\"5\":[\"userId\",\"string\",\"\"],\"6\":[\"url\",\"string\",\"\"],\"7\":[\"language\",\"string\",\"\"],\"8\":[\"cipher\",\"string\",\"\"],\"9\":[\"hint\",\"string\",\"\"]}\n                },\n                PbMsg: {\n                    '$': {\"1\":[\"id\",\"uint32\",0],\"2\":[\"chatId\",\"string\",\"\"],\"3\":[\"content\",\"default.PTP.Common.PbContent\",null],\"4\":[\"date\",\"uint32\",0],\"5\":[\"isOutgoing\",\"bool\",false],\"6\":[\"senderId\",\"string\",\"\"],\"7\":[\"isForwardingAllowed\",\"bool\",false],\"8\":[\"previousLocalId\",\"double\",0]}\n                },\n                PbPhoto: {\n                    '$': {\"1\":[\"id\",\"string\",\"\"],\"2\":[\"thumbnail\",\"default.PTP.Common.PbThumbnail\",null],\"3\":[\"sizes\",\"<default.PTP.Common.PbSizes\",null],\"4\":[\"isSpoiler\",\"bool\",false]}\n                },\n                PbQrCode: {\n                    '$': {\"1\":[\"type\",\"uint32\",1],\"2\":[\"data\",\"bytes\",[]]}\n                },\n                PbSettings: {\n                    '$': {\"1\":[\"isAutoArchived\",\"bool\",false],\"2\":[\"canReportSpam\",\"bool\",false],\"3\":[\"canAddContact\",\"bool\",false],\"4\":[\"canBlockContact\",\"bool\",false]}\n                },\n                PbSizes: {\n                    '$': {\"1\":[\"width\",\"uint32\",0],\"2\":[\"height\",\"uint32\",0],\"3\":[\"type\",\"string\",\"\"]}\n                },\n                PbText: {\n                    '$': {\"1\":[\"text\",\"string\",\"\"],\"2\":[\"entities\",\"<default.PTP.Common.PbMessageEntity\",null]}\n                },\n                PbThumbnail: {\n                    '$': {\"1\":[\"width\",\"uint32\",0],\"2\":[\"height\",\"uint32\",0],\"3\":[\"dataUri\",\"string\",\"\"]}\n                },\n                PbUser: {\n                    '$': {\"1\":[\"id\",\"string\",\"\"],\"2\":[\"firstName\",\"string\",\"\"],\"3\":[\"usernames\",\"<default.PTP.Common.PbUsernames\",null],\"4\":[\"isMin\",\"bool\",false],\"5\":[\"isPremium\",\"bool\",false],\"6\":[\"type\",\"string\",\"\"],\"7\":[\"hasVideoAvatar\",\"bool\",false],\"8\":[\"canBeInvitedToGroup\",\"bool\",false],\"9\":[\"phoneNumber\",\"string\",\"\"],\"10\":[\"noStatus\",\"bool\",false],\"11\":[\"accessHash\",\"string\",\"\"],\"12\":[\"fullInfo\",\"default.PTP.Common.PbFullInfo\",null],\"13\":[\"lastName\",\"string\",\"\"],\"14\":[\"isSelf\",\"bool\",false],\"15\":[\"avatarHash\",\"string\",\"\"],\"16\":[\"photos\",\"<default.PTP.Common.PbPhoto\",null]}\n                },\n                PbUsernames: {\n                    '$': {\"1\":[\"username\",\"string\",\"\"],\"2\":[\"isActive\",\"bool\",false],\"3\":[\"isEditable\",\"bool\",false]}\n                },\n                PbUserSetting: {\n                    '$': {\"1\":[\"chatFolders\",\"<default.PTP.Common.PbChatFolder\",null],\"2\":[\"chatFolderOrderedIds\",\"[uint32\",null],\"3\":[\"myBotIds\",\"<string\",null],\"4\":[\"myGroups\",\"<string\",null]}\n                },\n                PbVoice: {\n                    '$': {\"1\":[\"id\",\"string\",\"\"],\"2\":[\"waveform\",\"[uint32\",null],\"3\":[\"duration\",\"uint32\",0]}\n                },\n                QrCodeType: {\n                    '@': {\"QrCodeType_MNEMONIC\":1}\n                },\n                UserMessageStoreData: {\n                    '$': {\"1\":[\"chatId\",\"string\",\"\"],\"2\":[\"messageIds\",\"[uint64\",null],\"3\":[\"messageIdsDeleted\",\"[uint64\",null],\"4\":[\"time\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}]}\n                },\n                UserStoreData: {\n                    '$': {\"1\":[\"chatIds\",\"<string\",null],\"2\":[\"chatIdsDeleted\",\"<string\",null],\"3\":[\"chatFolders\",\"string\",\"\"],\"7\":[\"time\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}]}\n                },\n                UserStoreRow: {\n                    '$': {\"1\":[\"buf\",\"bytes\",[]],\"2\":[\"userId\",\"string\",\"\"],\"3\":[\"time\",\"uint32\",0],\"4\":[\"user\",\"default.PTP.Common.PbUser\",null]}\n                }\n            },\n            File: {\n                DownloadReq: {\n                    '$': {\"1\":[\"id\",\"string\",\"\"]}\n                },\n                DownloadRes: {\n                    '$': {\"1\":[\"file\",\"default.PTP.Common.FileInfo\",null],\"100\":[\"err\",\"uint32\",0]}\n                },\n                UploadReq: {\n                    '$': {\"1\":[\"file\",\"default.PTP.Common.FileInfo\",null]}\n                },\n                UploadRes: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                }\n            },\n            Msg: {\n                AnswerCallbackButtonReq: {\n                    '$': {\"1\":[\"chatId\",\"string\",\"\"],\"2\":[\"messageId\",\"uint32\",0],\"3\":[\"data\",\"string\",\"\"],\"4\":[\"accessHash\",\"string\",\"\"],\"5\":[\"isGame\",\"bool\",false]}\n                },\n                AnswerCallbackButtonRes: {\n                    '$': {\"1\":[\"message\",\"string\",\"\"],\"2\":[\"url\",\"string\",\"\"],\"3\":[\"alert\",\"string\",\"\"],\"100\":[\"err\",\"uint32\",0]}\n                },\n                DownloadMsgReq: {\n                    '$': {\"1\":[\"chatId\",\"string\",\"\"]}\n                },\n                DownloadMsgRes: {\n                    '$': {\"1\":[\"messages\",\"<default.PTP.Common.MessageStoreRow\",null],\"100\":[\"err\",\"uint32\",0]}\n                },\n                GenMsgIdReq: {\n                    '$': {\"1\":[\"isLocal\",\"bool\",false]}\n                },\n                GenMsgIdRes: {\n                    '$': {\"1\":[\"messageId\",\"uint64\",{\"low\":0,\"high\":0,\"unsigned\":true}],\"100\":[\"err\",\"uint32\",0]}\n                },\n                MsgDeleteReq: {\n                    '$': {\"1\":[\"user_id\",\"string\",\"\"],\"2\":[\"chat_id\",\"string\",\"\"],\"3\":[\"msg_ids\",\"[uint32\",null],\"4\":[\"revoke\",\"bool\",false]}\n                },\n                MsgDeleteRes: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                },\n                MsgListReq: {\n                    '$': {\"1\":[\"chatId\",\"string\",\"\"],\"2\":[\"lastMessageId\",\"uint32\",0],\"3\":[\"limit\",\"uint32\",0],\"4\":[\"isUp\",\"bool\",false]}\n                },\n                MsgListRes: {\n                    '$': {\"1\":[\"payload\",\"string\",\"\"],\"100\":[\"err\",\"uint32\",0]}\n                },\n                MsgUpdateReq: {\n                    '$': {\"1\":[\"user_id\",\"string\",\"\"],\"2\":[\"chat_id\",\"string\",\"\"],\"3\":[\"msg_id\",\"uint32\",0],\"4\":[\"text\",\"string\",\"\"]}\n                },\n                MsgUpdateRes: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                },\n                RemoveMessagesReq: {\n                    '$': {\"1\":[\"messageIds\",\"[uint32\",null]}\n                },\n                RemoveMessagesRes: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                },\n                SendReq: {\n                    '$': {\"1\":[\"payload\",\"string\",\"\"]}\n                },\n                SendRes: {\n                    '$': {\"1\":[\"action\",\"string\",\"\"],\"2\":[\"payload\",\"string\",\"\"],\"100\":[\"err\",\"uint32\",0]}\n                },\n                UploadMsgReq: {\n                    '$': {\"1\":[\"messages\",\"<default.PTP.Common.MessageStoreRow\",null],\"2\":[\"chatId\",\"string\",\"\"],\"3\":[\"time\",\"uint32\",0]}\n                },\n                UploadMsgRes: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                }\n            },\n            Other: {\n                OtherNotify: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                }\n            },\n            Sync: {\n                SyncReq: {\n                    '$': {\"1\":[\"userStoreData\",\"default.PTP.Common.UserStoreData\",null]}\n                },\n                SyncRes: {\n                    '$': {\"1\":[\"userStoreData\",\"default.PTP.Common.UserStoreData\",null],\"100\":[\"err\",\"uint32\",0]}\n                }\n            },\n            User: {\n                DownloadUserReq: {\n                    '$': {\"1\":[\"userIds\",\"<string\",null]}\n                },\n                DownloadUserRes: {\n                    '$': {\"1\":[\"users\",\"<default.PTP.Common.UserStoreRow\",null],\"100\":[\"err\",\"uint32\",0]}\n                },\n                GenUserIdReq: {\n                    '$': {}\n                },\n                GenUserIdRes: {\n                    '$': {\"1\":[\"userId\",\"uint32\",0],\"100\":[\"err\",\"uint32\",0]}\n                },\n                UploadUserReq: {\n                    '$': {\"1\":[\"users\",\"<default.PTP.Common.UserStoreRow\",null],\"3\":[\"time\",\"uint32\",0]}\n                },\n                UploadUserRes: {\n                    '$': {\"100\":[\"err\",\"uint32\",0]}\n                }\n            }\n        }\n    }\n}, '', $root, false);\n\n// exposing 'default' to global/window\nprotobuf.util.global['default'] = $root['default'];\n\n//module.exports = protobuf.util.global['default']\n\nexport default protobuf.util.global['default'];\n"],"names":["protobuf","require","util","Long","$root","roots","$wires","types","basic","$packed","packed","$types","Object","keys","invalid","name","repeated","map","keyType","expected","keyVerifyMap","int32","uint32","sint32","fixed32","sfixed32","int64","uint64","sint64","fixed64","sfixed64","bool","type32Map","type64Map","floatOrDoubleMap","float","double","$verifier","type","message","fieldInfo","field","test","verifyKey","undefined","isInteger","low","high","isString","length","resolvedType","verify","$reader","call","this","decode","$writer","id","wire","fork","encode","ldelim","i","Reader","prototype","Writer","$createConverter","cfgs","converter","cfg","j","convf","$conv_object","Boolean","String","Number","value","ret","fromValue","unsigned","charAt","LongBits","toNumber","parseInt","newBuffer","base64","fromObject","$conv_message","options","json","isFinite","longs","toString","bytes","Array","slice","isArray","toObject","enums","_","namespace","path","parent","inner","key","every","k","Error","payloads","C","props","payload","$namespace","emptyObject","substring","split","t","reduce","m","o","emptyArray","hasOwnProperty","fromBits","create","reader","end","len","pos","tag","$message","$end","push","skipType","decodeDelimited","writer","array","encodeDelimited","object","property","TypeError","vtype","objects","defaults","arrays","toJSON","constructor","toJSONOptions","fieldName","isObject","$fieldName","error","values","v","vals","forEach","default","PTP","Auth","AuthLoginReq","AuthLoginRes","AuthNativeReq","AuthNativeRes","AuthPreLoginReq","AuthPreLoginRes","AuthStep1Req","AuthStep1Res","AuthStep2Req","AuthStep2Res","UpdateProfileReq","UpdateProfileRes","UpdateUsernameReq","UpdateUsernameRes","UploadProfilePhotoReq","UploadProfilePhotoRes","Chats","LoadChatsReq","LoadChatsRes","Common","AUTH_TYPE","EncryptType","ERR","FileInfo","MessageStoreRow","PbAction","PbAiBot","PbBotInfo","PbChat","PbChatFolder","PbChatGpBotConfig","PbChatGptConfig","PbCommands","PbContent","PbFullInfo","PbMenuButton","PbMessageEntity","PbMsg","PbPhoto","PbQrCode","PbSettings","PbSizes","PbText","PbThumbnail","PbUser","PbUsernames","PbUserSetting","PbVoice","QrCodeType","UserMessageStoreData","UserStoreData","UserStoreRow","File","DownloadReq","DownloadRes","UploadReq","UploadRes","Msg","AnswerCallbackButtonReq","AnswerCallbackButtonRes","DownloadMsgReq","DownloadMsgRes","GenMsgIdReq","GenMsgIdRes","MsgDeleteReq","MsgDeleteRes","MsgListReq","MsgListRes","MsgUpdateReq","MsgUpdateRes","RemoveMessagesReq","RemoveMessagesRes","SendReq","SendRes","UploadMsgReq","UploadMsgRes","Other","OtherNotify","Sync","SyncReq","SyncRes","User","DownloadUserReq","DownloadUserRes","GenUserIdReq","GenUserIdRes","UploadUserReq","UploadUserRes","global"],"sourceRoot":""}