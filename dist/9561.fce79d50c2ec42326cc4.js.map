{"version":3,"file":"9561.fce79d50c2ec42326cc4.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/FakeIcon.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/VerifiedIcon.tsx","webpack://telegram-t/./src/components/common/FullNameTitle.module.scss?6448","webpack://telegram-t/./src/components/common/FullNameTitle.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumIcon.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/main/Badge.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/AvatarBadge.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatOrderDiff.ts","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/CropModal.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://telegram-t/./src/components/ui/MenuSeparator.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Skeleton.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useContextMenuHandlers.ts","webpack://telegram-t/./src/hooks/useContextMenuPosition.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://telegram-t/./src/hooks/useUniqueId.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useStateRef.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/lib/fastBlur.js","webpack://telegram-t/./src/lib/rlottie/RLottie.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/lethargy.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/fastSmoothScroll.ts","webpack://telegram-t/./src/util/fastSmoothScrollHorizontal.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/stopEvent.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/worker/setting.ts"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiGroupCall, ApiUser } from '../../../api/types';\nimport type { AnimationLevel } from '../../../types';\n\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Avatar from '../../common/Avatar';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  animationLevel: AnimationLevel;\n};\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n  usersById,\n  chatsById,\n  animationLevel,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (participants) {\n      return Object.values(participants).filter((_, i) => i < 3).map(({ id, isUser }) => {\n        if (isUser) {\n          if (!usersById[id]) {\n            return undefined;\n          }\n          return { user: usersById[id] };\n        } else {\n          if (!chatsById[id]) {\n            return undefined;\n          }\n          return { chat: chatsById[id] };\n        }\n      }).filter(Boolean);\n    } else return [];\n  }, [chatsById, participants, usersById]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  if (!groupCall) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        !isActive && 'is-hidden',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', groupCall.participantsCount || 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {fetchedParticipants.map((p) => {\n          if (!p) return undefined;\n          if (p.user) {\n            return <Avatar key={p.user.id} user={p.user} animationLevel={animationLevel} />;\n          } else {\n            return <Avatar key={p.chat.id} chat={p.chat} animationLevel={animationLevel} />;\n          }\n        })}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }) => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n    return {\n      groupCall,\n      usersById: global.users.byId,\n      chatsById: global.chats.byId,\n      activeGroupCallId: global.groupCalls.activeGroupCallId,\n      isActive: ((!groupCall ? (chat && chat.isCallNotEmpty && chat.isCallActive)\n        : (groupCall.participantsCount > 0 && groupCall.isLoaded)))\n        && (activeGroupCallId !== groupCall?.id),\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { ANIMATION_LEVEL_MAX } from '../../config';\nimport usePrevious from '../../hooks/usePrevious';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useTimeout from '../../hooks/useTimeout';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n};\n\nconst ANIMATION_TIME = 200;\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n}) => {\n  const lang = useLang();\n\n  const prevText = usePrevious(text);\n  const forceUpdate = useForceUpdate();\n\n  const isAnimatingRef = useRef(false);\n\n  const shouldAnimate = getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MAX;\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) return text;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld}>{prevText[i]}</div>\n            <div className={styles.characterNew}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    isAnimatingRef.current = true;\n\n    return elements;\n  }, [prevText, shouldAnimate, text]);\n\n  useTimeout(() => {\n    isAnimatingRef.current = false;\n    forceUpdate();\n  }, isAnimatingRef.current ? ANIMATION_TIME : undefined);\n\n  return (\n    <span className={styles.root} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport type { ApiSticker } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean; lastSyncTime?: number };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, lastSyncTime, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n    lastSyncTime,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad, undefined, lastSyncTime);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isPreviewLoaded, markPreviewLoaded] = useFlag(Boolean(thumbDataUri) || loadedPreviewUrls.has(previewUrl));\n  const transitionClassNames = useMediaTransition(isPreviewLoaded);\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useCallback(() => {\n    markPreviewLoaded();\n    loadedPreviewUrls.add(previewUrl);\n  }, [markPreviewLoaded, previewUrl]);\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, transitionClassNames)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={styles.preview} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={styles.preview}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={markAnimationReady} noTransition />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\nimport type { ISettings } from '../../types';\nimport { AudioOrigin } from '../../types';\nimport type { LangFn } from '../../hooks/useLang';\n\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\nimport renderText from './helpers/renderText';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport useBuffering from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useLang from '../../hooks/useLang';\nimport { captureEvents } from '../../util/captureEvents';\nimport useMedia from '../../hooks/useMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  lastSyncTime?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n// eslint-disable-next-line max-len\nconst TRANSCRIBE_SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 24\" class=\"loading-svg\"><rect class=\"loading-rect\" fill=\"transparent\" width=\"32\" height=\"24\" stroke-width=\"3\" stroke-linejoin=\"round\" rx=\"6\" ry=\"6\" stroke=\"var(--accent-color)\" stroke-dashoffset=\"1\" stroke-dasharray=\"32,68\"></rect></svg>';\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  lastSyncTime,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = (isActivated || PRELOAD) && lastSyncTime;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  }, [message, onPlay]);\n\n  const handleTrackChange = useCallback(() => {\n    setIsActivated(false);\n  }, []);\n\n  let {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  }, [isUploading, isPlaying, isActivated, playPause, onCancelUpload, onPlay, message.id, message.chatId, origin]);\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  }, [cancelMessageMediaDownload, downloadMessageMedia, isDownloading, message]);\n\n  const handleSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  }, [duration, setCurrentTime]);\n\n  const handleStartSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  }, [handleSeek]);\n\n  const handleStopSeek = useCallback(() => {\n    isSeeking.current = false;\n  }, []);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  const handleTranscribe = useCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  }, [message.chatId, message.id, transcribeAudio]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  const transcribeSvgMemo = useMemo(() => (\n    <div dangerouslySetInnerHTML={{ __html: TRANSCRIBE_SVG }} />\n  ), []);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon-play\" />\n        <i className=\"icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={isDownloading ? 'icon-close' : 'icon-arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          transcribeSvgMemo,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  svgMemo?: React.ReactNode,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && svgMemo}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline no-selection\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  selectChat, selectCurrentMessageList, selectNotifyExceptions, selectNotifySettings, selectUser,\n} from '../../global/selectors';\nimport {\n  getChatDescription,\n  getChatLink,\n  getTopicLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  lastSyncTime,\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n  } = getActions();\n\n  const {\n    id: userId,\n    fullInfo,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    if (lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, userId, lastSyncTime]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo\n      ? getTopicLink(chat.id, activeChatUsernames?.[0].username, topicId)\n      : getChatLink(chat);\n  }, [chat, isTopicInfo, activeChatUsernames, topicId]);\n\n  const handleNotificationChange = useCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  }, [chatId, isTopicInfo, topicId, updateChatMutedState, updateTopicMutedState]);\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n  const description = (fullInfo?.bio) || getChatDescription(chat);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {/* {!forceShowSelf && ( */}\n      {/*   <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}> */}\n      {/*     <span>{lang('Notifications')}</span> */}\n      {/*     <Switcher */}\n      {/*       id=\"group-notifications\" */}\n      {/*       label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'} */}\n      {/*       checked={areNotificationsEnabled} */}\n      {/*       inactive */}\n      {/*     /> */}\n      {/*   </ListItem> */}\n      {/* )} */}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { lastSyncTime, countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      lastSyncTime,\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { AnimationLevel } from '../../types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport {\n  isUserId,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  animationLevel: AnimationLevel;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  animationLevel,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockContact,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash! });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          chat={chat}\n          isSavedMessages={isChatWithSelf}\n          animationLevel={animationLevel}\n          withVideo\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useRef, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useMedia from '../../hooks/useMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n  isDownloading,\n}) => {\n  const dispatch = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleClick = useCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  }, [\n    isUploading, isDownloading, isTransferring, withMediaViewer, onCancelUpload, dispatch, message, onMediaClick,\n  ]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'icon-play' : 'icon-eye') : 'icon-download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiFakeType } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport './FakeIcon.scss';\n\ntype OwnProps = {\n  fakeType: ApiFakeType;\n};\n\nconst FakeIcon: FC<OwnProps> = ({\n  fakeType,\n}) => {\n  const lang = useLang();\n\n  return (\n    <span className=\"FakeIcon\">\n      {lang(fakeType === 'fake' ? 'FakeMessage' : 'ScamMessage')}\n    </span>\n  );\n};\n\nexport default memo(FakeIcon);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../lib/teact/teact';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/environment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useLang from '../../hooks/useLang';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {isTransferring && transferProgress ? `${Math.round(transferProgress * 100)}%` : sizeString}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport './VerifiedIcon.scss';\n\n// eslint-disable-next-line max-len\nconst VERIFIED_ICON = { __html: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12.3 2.9c.1.1.2.1.3.2.7.6 1.3 1.1 2 1.7.3.2.6.4.9.4.9.1 1.7.2 2.6.2.5 0 .6.1.7.7.1.9.1 1.8.2 2.6 0 .4.2.7.4 1 .6.7 1.1 1.3 1.7 2 .3.4.3.5 0 .8-.5.6-1.1 1.3-1.6 1.9-.3.3-.5.7-.5 1.2-.1.8-.2 1.7-.2 2.5 0 .4-.2.5-.6.6-.8 0-1.6.1-2.5.2-.5 0-1 .2-1.4.5-.6.5-1.3 1.1-1.9 1.6-.3.3-.5.3-.8 0-.7-.6-1.4-1.2-2-1.8-.3-.2-.6-.4-.9-.4-.9-.1-1.8-.2-2.7-.2-.4 0-.5-.2-.6-.5 0-.9-.1-1.7-.2-2.6 0-.4-.2-.8-.4-1.1-.6-.6-1.1-1.3-1.6-2-.4-.4-.3-.5 0-1 .6-.6 1.1-1.3 1.7-1.9.3-.3.4-.6.4-1 0-.8.1-1.6.2-2.5 0-.5.1-.6.6-.6.9-.1 1.7-.1 2.6-.2.4 0 .7-.2 1-.4.7-.6 1.4-1.2 2.1-1.7.1-.2.3-.3.5-.2z\" style=\"fill: var(--color-fill)\"/><path class=\"lol\" d=\"M16.4 10.1l-.2.2-5.4 5.4c-.1.1-.2.2-.4 0l-2.6-2.6c-.2-.2-.1-.3 0-.4.2-.2.5-.6.7-.6.3 0 .5.4.7.6l1.1 1.1c.2.2.3.2.5 0l4.3-4.3c.2-.2.4-.3.6 0 .1.2.3.3.4.5.2 0 .3.1.3.1z\" style=\"fill: var(--color-checkmark)\"/></svg>' };\n\nconst VerifiedIcon: FC = () => {\n  return (\n    // eslint-disable-next-line react/no-danger\n    <span className=\"VerifiedIcon\" dangerouslySetInnerHTML={VERIFIED_ICON} />\n  );\n};\n\nexport default VerifiedIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ysHMmXALnn0fgFRc7Bn7\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_STATUS_LOOP_LIMIT } from '../../config';\nimport renderText from './helpers/renderText';\nimport { getChatTitle, getUserFullName, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport VerifiedIcon from './VerifiedIcon';\nimport FakeIcon from './FakeIcon';\nimport CustomEmoji from './CustomEmoji';\nimport PremiumIcon from './PremiumIcon';\n\nimport styles from './FullNameTitle.module.scss';\n\ntype OwnProps = {\n  peer: ApiChat | ApiUser;\n  className?: string;\n  noVerified?: boolean;\n  noFake?: boolean;\n  withEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  isSavedMessages?: boolean;\n  noLoopLimit?: boolean;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  observeIntersection?: ObserveFn;\n};\n\nconst FullNameTitle: FC<OwnProps> = ({\n  className,\n  peer,\n  noVerified,\n  noFake,\n  withEmojiStatus,\n  emojiStatusSize,\n  isSavedMessages,\n  noLoopLimit,\n  onEmojiStatusClick,\n  observeIntersection,\n}) => {\n  const lang = useLang();\n  const isUser = isUserId(peer.id);\n  const title = isUser ? getUserFullName(peer as ApiUser) : getChatTitle(lang, peer as ApiChat);\n  const emojiStatus = isUser && (peer as ApiUser).emojiStatus;\n  const isPremium = isUser && (peer as ApiUser).isPremium;\n\n  if (isSavedMessages) {\n    return (\n      <div className={buildClassName('title', styles.root, className)}>\n        <h3>{lang('SavedMessages')}</h3>\n      </div>\n    );\n  }\n\n  return (\n    <div className={buildClassName('title', styles.root, className)}>\n      <h3 dir=\"auto\" className=\"fullName\">{renderText(title || '')}</h3>\n      {!noVerified && peer.isVerified && <VerifiedIcon />}\n      {!noFake && peer.fakeType && <FakeIcon fakeType={peer.fakeType} />}\n      {withEmojiStatus && emojiStatus && (\n        <CustomEmoji\n          documentId={emojiStatus.documentId}\n          size={emojiStatusSize}\n          loopLimit={!noLoopLimit ? EMOJI_STATUS_LOOP_LIMIT : undefined}\n          observeIntersectionForLoading={observeIntersection}\n          onClick={onEmojiStatusClick}\n        />\n      )}\n      {withEmojiStatus && !emojiStatus && isPremium && <PremiumIcon />}\n    </div>\n  );\n};\n\nexport default memo(FullNameTitle);\n","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useCallback, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiTopic, ApiThreadInfo, ApiTypingStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { AnimationLevel } from '../../types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { REM } from './helpers/mediaDimensions';\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat, selectChatMessages, selectChatOnlineCount, selectThreadInfo, selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  withVideoAvatar?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    animationLevel: AnimationLevel;\n    messagesCount?: number;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  withVideoAvatar,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  animationLevel,\n  lastSyncTime,\n  topic,\n  messagesCount,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin && lastSyncTime) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, lastSyncTime, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n    if (chat && hasMedia) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: chat.id,\n        mediaId: 0,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [chat, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          chat={chat}\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          withVideo={withVideoAvatar}\n          animationLevel={animationLevel}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon topic={topic!} className=\"topic-header-icon\" size={TOPIC_ICON_SIZE} />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const { lastSyncTime } = global;\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      lastSyncTime,\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      animationLevel: global.settings.byKey.animationLevel,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  }, [hideSpoiler, message, onClick]);\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\"};","import React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  }, []);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon-message-failed\" />\n          </div>\n        ) : <i className={`icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport {MIN_PASSWORD_LENGTH, TEST_PWD} from '../../config';\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState(TEST_PWD);\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue && !TEST_PWD) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n    if(inputRef && inputRef.current.value){\n      setCanSubmit(true);\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          onKeyDown={(e)=>{\n            if(e.code == \"Enter\" && !onSubmit){\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            }\n          }}\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          multiple={true}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={isPasswordVisible ? 'icon-eye' : 'icon-eye-closed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport useTimeout from '../../hooks/useTimeout';\nimport useFlag from '../../hooks/useFlag';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, useRef, useEffect, memo,\n} from '../../lib/teact/teact';\n\nimport { isUserId } from '../../global/helpers';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onFilterChange: (value: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  onSelectedIdsChange,\n  onFilterChange,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange(newSelectedIds);\n    onFilterChange('');\n  }, [selectedIds, onSelectedIdsChange, onFilterChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, itemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            chatOrUserId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          id={searchInputId}\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={filterPlaceholder || lang('SelectChat')}\n        />\n      </div>\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable picker-list-item\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleItemClick(id)}\n              ripple\n            >\n              <Checkbox label=\"\" checked={selectedIds.includes(id)} />\n              {isUserId(id) ? (\n                <PrivateChatInfo userId={id} />\n              ) : (\n                <GroupChatInfo chatId={id} />\n              )}\n            </ListItem>\n          ))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../global/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: string;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  onClick,\n  clickArg,\n  chat,\n  user,\n  className,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={`icon-${icon}`} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (chat || user) {\n    iconElement = (\n      <Avatar\n        chat={chat}\n        user={user}\n        size=\"small\"\n        isSavedMessages={user?.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, user);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n    };\n  },\n)(PickerSelectedItem));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport generateIdFor from '../../util/generateIdFor';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './PremiumIcon.scss';\n\n// eslint-disable-next-line max-len\nconst PREMIUM_ICON = { __html: '<svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.63869 12.1902L3.50621 14.1092C3.18049 14.3087 2.75468 14.2064 2.55515 13.8807C2.45769 13.7216 2.42864 13.5299 2.47457 13.3491L2.95948 11.4405C3.13452 10.7515 3.60599 10.1756 4.24682 9.86791L7.6642 8.22716C7.82352 8.15067 7.89067 7.95951 7.81418 7.80019C7.75223 7.67116 7.61214 7.59896 7.47111 7.62338L3.66713 8.28194C2.89387 8.41581 2.1009 8.20228 1.49941 7.69823L0.297703 6.69116C0.00493565 6.44581 -0.0335059 6.00958 0.211842 5.71682C0.33117 5.57442 0.502766 5.48602 0.687982 5.47153L4.35956 5.18419C4.61895 5.16389 4.845 4.99974 4.94458 4.75937L6.36101 1.3402C6.5072 0.987302 6.91179 0.819734 7.26469 0.965925C7.43413 1.03612 7.56876 1.17075 7.63896 1.3402L9.05539 4.75937C9.15496 4.99974 9.38101 5.16389 9.6404 5.18419L13.3322 5.47311C13.713 5.50291 13.9975 5.83578 13.9677 6.2166C13.9534 6.39979 13.8667 6.56975 13.7269 6.68896L10.9114 9.08928C10.7131 9.25826 10.6267 9.52425 10.6876 9.77748L11.5532 13.3733C11.6426 13.7447 11.414 14.1182 11.0427 14.2076C10.8642 14.2506 10.676 14.2208 10.5195 14.1249L7.36128 12.1902C7.13956 12.0544 6.8604 12.0544 6.63869 12.1902Z\" fill=\"var(--color-fill)\"/></svg>' };\nconst store: Record<string, boolean> = {};\n\ntype OwnProps = {\n  withGradient?: boolean;\n  big?: boolean;\n  className?: string;\n  onClick?: VoidFunction;\n};\n\nconst PremiumIcon: FC<OwnProps> = ({\n  withGradient,\n  big,\n  className,\n  onClick,\n}) => {\n  const html = useMemo(() => {\n    return withGradient ? getPremiumIconGradient() : PREMIUM_ICON;\n  }, [withGradient]);\n\n  return (\n    <i\n      onClick={onClick}\n      className={buildClassName(\n        'PremiumIcon', className, withGradient && 'gradient', onClick && 'clickable', big && 'big',\n      )}\n      dangerouslySetInnerHTML={html}\n      title=\"Premium\"\n    />\n  );\n};\n\nfunction getPremiumIconGradient() {\n  const id = generateIdFor(store);\n  return {\n    // eslint-disable-next-line max-len\n    __html: `<svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><defs><linearGradient id=\"${id}\" x1=\"3\" y1=\"63.5001\" x2=\"84.1475\" y2=\"-1.32262\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#6B93FF\"/><stop offset=\"0.439058\" stop-color=\"#976FFF\"/><stop offset=\"1\" stop-color=\"#E46ACE\"/></linearGradient></defs><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.63869 12.1902L3.50621 14.1092C3.18049 14.3087 2.75468 14.2064 2.55515 13.8807C2.45769 13.7216 2.42864 13.5299 2.47457 13.3491L2.95948 11.4405C3.13452 10.7515 3.60599 10.1756 4.24682 9.86791L7.6642 8.22716C7.82352 8.15067 7.89067 7.95951 7.81418 7.80019C7.75223 7.67116 7.61214 7.59896 7.47111 7.62338L3.66713 8.28194C2.89387 8.41581 2.1009 8.20228 1.49941 7.69823L0.297703 6.69116C0.00493565 6.44581 -0.0335059 6.00958 0.211842 5.71682C0.33117 5.57442 0.502766 5.48602 0.687982 5.47153L4.35956 5.18419C4.61895 5.16389 4.845 4.99974 4.94458 4.75937L6.36101 1.3402C6.5072 0.987302 6.91179 0.819734 7.26469 0.965925C7.43413 1.03612 7.56876 1.17075 7.63896 1.3402L9.05539 4.75937C9.15496 4.99974 9.38101 5.16389 9.6404 5.18419L13.3322 5.47311C13.713 5.50291 13.9975 5.83578 13.9677 6.2166C13.9534 6.39979 13.8667 6.56975 13.7269 6.68896L10.9114 9.08928C10.7131 9.25826 10.6267 9.52425 10.6876 9.77748L11.5532 13.3733C11.6426 13.7447 11.414 14.1182 11.0427 14.2076C10.8642 14.2506 10.676 14.2208 10.5195 14.1249L7.36128 12.1902C7.13956 12.0544 6.8604 12.0544 6.63869 12.1902Z\" fill=\"url(#${id})\"/></svg>`,\n  };\n}\n\nexport default memo(PremiumIcon);\n","import React, {\n  useEffect, useCallback, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiUser, ApiTypingStatus, ApiUserStatus, ApiChatMember,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { AnimationLevel } from '../../types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withVideoAvatar?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    animationLevel: AnimationLevel;\n    areMessagesLoaded: boolean;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withVideoAvatar,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  animationLevel,\n  lastSyncTime,\n  adminMember,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId && lastSyncTime) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, loadFullUser, loadProfilePhotos, lastSyncTime, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n    if (user && hasMedia) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: user.id,\n        mediaId: 0,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [user, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{renderText(status)}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n      />\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        user={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        withVideo={withVideoAvatar}\n        animationLevel={animationLevel}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { lastSyncTime } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      lastSyncTime,\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(PrivateChatInfo));\n","import React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/environment';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser, getVideoAvatarMediaHash,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Spinner from '../ui/Spinner';\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  lastSyncTime?: number;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  lastSyncTime,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const userOrChat = user || chat;\n  const currentPhoto = photo\n    || user?.fullInfo?.personalPhoto\n    || userOrChat?.fullInfo?.profilePhoto\n    || user?.fullInfo?.fallbackPhoto;\n  const canHaveMedia = userOrChat && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = currentPhoto || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(userOrChat, 'normal', 'photo');\n  const avatarBlobUrl = useMedia(avatarHash, undefined, undefined, lastSyncTime);\n\n  const photoHash = canHaveMedia && currentPhoto && !isVideo && `photo${currentPhoto.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash, undefined, undefined, lastSyncTime);\n\n  const videoHash = canHaveMedia && currentPhoto && isVideo && getVideoAvatarMediaHash(currentPhoto);\n  const videoBlobUrl = useMedia(videoHash, undefined, undefined, lastSyncTime);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && currentPhoto?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    currentPhoto?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = currentPhoto || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n  if (isSavedMessages) {\n    content = <i className=\"icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} className=\"thumb\" alt=\"\" />\n        )}\n        {currentPhoto && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  if(!content){\n    content = (\n      <div className=\"spinner-wrapper\">\n        <label style={'display:inline-flex'}role=\"button\" title=\"Edit your profile photo\">\n          <i className=\"icon-camera-add\" style={'font-size:48px'}></i>\n        </label>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useCallback, memo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiUser, ApiChat, ApiUserStatus, ApiTopic,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { AnimationLevel } from '../../types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport {\n  selectTabState,\n  selectChat, selectCurrentMessageList, selectThreadMessagesCount, selectUser, selectUserStatus,\n} from '../../global/selectors';\nimport { getUserStatus, isChatChannel, isUserOnline } from '../../global/helpers';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\nimport TopicIcon from './TopicIcon';\nimport Avatar from './Avatar';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    animationLevel: AnimationLevel;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  animationLevel,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  const slideAnimation = hasSlideAnimation\n    ? animationLevel >= 1 ? (lang.isRtl ? 'slide-optimized-rtl' : 'slide-optimized') : 'none'\n    : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(user || chat, photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  }, [openMediaViewer, userId, chatId, currentPhotoIndex, forceShowSelf]);\n\n  const handleClickPremium = useCallback(() => {\n    if (!user) return;\n\n    openPremiumModal({ fromUserId: user.id });\n  }, [openPremiumModal, user]);\n\n  const selectPreviousMedia = useCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  }, [currentPhotoIndex, isFirst]);\n\n  const selectNextMedia = useCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  }, [currentPhotoIndex, isLast]);\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && user?.fullInfo?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(user.fullInfo.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && user?.fullInfo?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={user.fullInfo.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(user.fullInfo.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleClickPremium}\n            noLoopLimit\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { animationLevel } = global.settings.byKey;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      isSavedMessages,\n      animationLevel,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import type { ApiChat, ApiPhoto, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  profile: ApiUser | ApiChat | undefined,\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { isSameReaction } from '../../global/helpers';\n\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useMedia from '../../hooks/useMedia';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport blankUrl from '../../assets/blank.png';\nimport './ReactionStaticEmoji.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName('ReactionStaticEmoji', transitionClassNames, className)}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\n\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\nimport InputText from '../ui/InputText';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media';\n  chatId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  chatId,\n  photo,\n  messageIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId, photo, reason: selectedReason, description,\n        });\n        break;\n    }\n    onClose();\n  }, [\n    description,\n    exitMessageSelectMode,\n    messageIds,\n    photo,\n    onClose,\n    reportMessages,\n    selectedReason,\n    chatId,\n    reportProfilePhoto,\n    reportPeer,\n    subject,\n  ]);\n\n  const handleSelectReason = useCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  }, []);\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !chatId)\n    || (subject === 'media' && (!chatId || !photo))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { getServerTimeOffset } from '../../util/serverTime';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\nimport useDynamicColorListener from '../../hooks/useDynamicColorListener';\n\nimport StickerView from './StickerView';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noAnimate?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isCurrentUserPremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  observeIntersection: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noAnimate,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  isCurrentUserPremium,\n  noShowPremium,\n  sharedCanvasRef,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const { rgbColor: customColor } = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, isCustomEmoji, hasEffect: isPremium, stickerSetInfo,\n  } = sticker;\n  const isLocked = !isCurrentUserPremium && isPremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noAnimate;\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuPosition);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => {\n      return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n    },\n    [isStatusPicker],\n  );\n\n  const getLayout = () => ({ withPortal: isStatusPicker });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  }, [onRemoveRecentClick, sticker]);\n\n  const handleContextRemoveRecent = useCallback(() => {\n    onRemoveRecentClick!(sticker);\n  }, [onRemoveRecentClick, sticker]);\n\n  const handleContextUnfave = useCallback(() => {\n    onUnfaveClick!(sticker);\n  }, [onUnfaveClick, sticker]);\n\n  const handleContextFave = useCallback(() => {\n    onFaveClick!(sticker);\n  }, [onFaveClick, sticker]);\n\n  const handleSendQuiet = useCallback(() => {\n    onClick?.(clickArg, true);\n  }, [clickArg, onClick]);\n\n  const handleSendScheduled = useCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  }, [clickArg, onClick]);\n\n  const handleOpenSet = useCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  }, [openStickerSet, stickerSetInfo]);\n\n  const handleEmojiStatusExpiresClick = useCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  }, [setEmojiStatus, sticker, handleContextMenuClose, onContextMenuClick]);\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isCustomEmoji && 'custom-emoji',\n    `sticker-button-${id}`,\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        isSmall\n        size={size}\n        shouldLoop\n        shouldPreloadPreview\n        noLoad={!shouldLoad}\n        noPlay={!shouldPlay}\n        withSharedAnimation\n        sharedCanvasRef={sharedCanvasRef}\n        customColor={customColor}\n      />\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <i className=\"icon-lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <i className=\"icon-premium\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { ApiTopic } from '../../api/types';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\nimport { renderMessageSummary } from './helpers/renderMessageText';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  }, [onMessageClick, message.id, message.chatId]);\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { ApiMessage } from '../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\nimport type { TextPart } from '../../../types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\nimport trimText from '../../../util/trimText';\n\nexport function renderMessageText(\n  message: ApiMessage,\n  highlight?: string,\n  emojiSize?: number,\n  isSimple?: boolean,\n  truncateLength?: number,\n  isProtected?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  return renderTextWithEntities(\n    trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    message.id,\n    isSimple,\n    isProtected,\n  );\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText(message, highlight, undefined, true, truncateLength);\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport type { OwnProps } from './ChatFolderModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default memo(ChatFolderModalAsync);\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ShowTransition from '../../ui/ShowTransition';\nimport AnimatedCounter from '../../common/AnimatedCounter';\n\nimport './Badge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const isShown = !forceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'Badge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('Badge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"Badge mention\">\n        <i className=\"icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('Badge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"Badge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"Badge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './ChatCallStatus.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      'ChatCallStatus',\n      isActive && 'active',\n      isSelected && !isMobile && 'selected',\n    )}\n    >\n      <div className=\"indicator\">\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifySettings,\n  selectNotifyExceptions,\n  selectIsForumPanelOpen,\n} from '../../../global/selectors';\n\nimport Badge from './Badge';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  isForumPanelActive?: boolean;\n};\n\nconst AvatarBadge: FC<OwnProps & StateProps> = ({\n  chat,\n  isMuted,\n  isForumPanelActive,\n}) => {\n  return chat && (\n    <div className=\"avatar-badge-wrapper\">\n      <Badge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={!isForumPanelActive} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isForumPanelActive: selectIsForumPanelOpen(global),\n    };\n  },\n)(AvatarBadge));\n","import React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ApiChat,\n  ApiUser,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiFormattedText,\n  ApiUserStatus,\n  ApiTopic,\n  ApiTypingStatus,\n} from '../../../api/types';\nimport type { AnimationLevel } from '../../../types';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { IS_MULTITAB_SUPPORTED } from '../../../util/environment';\nimport {\n  isUserId,\n  getPrivateChatUserId,\n  getMessageAction,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectUser,\n  selectChatMessage,\n  selectOutgoingStatus,\n  selectDraft,\n  selectCurrentMessageList,\n  selectNotifySettings,\n  selectNotifyExceptions,\n  selectUserStatus,\n  selectTopicFromMessage,\n  selectThreadParam, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport ListItem from '../../ui/ListItem';\nimport Avatar from '../../common/Avatar';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ReportModal from '../../common/ReportModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport ChatCallStatus from './ChatCallStatus';\nimport Badge from './Badge';\nimport AvatarBadge from './AvatarBadge';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiUser | ApiChat;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  animationLevel?: AnimationLevel;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastSyncTime?: number;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  animationLevel,\n  isSelected,\n  isSelectedForum,\n  canScrollDown,\n  canChangeFolder,\n  lastSyncTime,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    animationLevel,\n    orderDiff,\n  });\n\n  const handleClick = useCallback(() => {\n    if (isForum) {\n      openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n    if(!isSelected){\n      setTimeout(()=>{\n        focusLastMessage();\n      },200)\n    }\n  }, [isForum, openChat, chatId, isSelected, canScrollDown, openForumPanel, focusLastMessage]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  }, [chatId, onDragEnter]);\n\n  const handleDelete = useCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }, [markRenderDeleteModal, openDeleteModal]);\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleReport = useCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  }, [markRenderReportModal, openReportModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && lastSyncTime && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting, lastSyncTime, loadTopics]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={IS_MULTITAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className=\"status\">\n        <Avatar\n          chat={chat}\n          user={user}\n          userStatus={userStatus}\n          isSavedMessages={user?.isSelf}\n          lastSyncTime={lastSyncTime}\n          animationLevel={animationLevel}\n          withVideo\n          observeIntersection={observeIntersection}\n        />\n        <AvatarBadge chatId={chatId} />\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={animationLevel !== 0} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={user || chat}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <Badge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          chatId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = chat.lastMessage ? getMessageAction(chat.lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = chat.lastMessage && selectTopicFromMessage(global, chat.lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      animationLevel: global.settings.byKey.animationLevel,\n      isSelected,\n      isSelectedForum,\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      lastSyncTime: global.lastSyncTime,\n      ...(isOutgoing && chat.lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\n\nimport ListItem from '../../ui/ListItem';\nimport AnimatedCounter from '../../common/AnimatedCounter';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(chat.title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    };\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    };\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    };\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          {Boolean(archiveUnreadCount) && (\n            <div className={styles.unreadCount}>\n              <AnimatedCounter text={formatIntegerCompact(archiveUnreadCount)} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            {Boolean(archiveUnreadCount) && (\n              <div className=\"Badge\">\n                <AnimatedCounter text={formatIntegerCompact(archiveUnreadCount)} />\n              </div>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import React, {\n  memo, useEffect, useRef, useCallback,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\nimport type { SettingsScreens } from '../../../types';\nimport type { GlobalState } from '../../../global/types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVED_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n} from '../../../config';\nimport { IS_MAC_OS, IS_PWA } from '../../../util/environment';\nimport { getPinnedChatsCount, getOrderKey } from '../../../util/folderManager';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useChatOrderDiff from './hooks/useChatOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport Archive from './Archive';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  lastSyncTime?: number;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const { openChat, openNextChat, closeForumPanel } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n\n  const resolvedFolderId = (\n    folderType === 'all' ? ALL_FOLDER_ID : folderType === 'archived' ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = folderType === 'all' && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useChatOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n\n    if (!isActive || !orderedIds || !IS_PWA) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useCallback(() => {\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  }, [closeForumPanel, onLeftColumnContentChange]);\n\n  const handleArchivedDragEnter = useCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  }, [handleArchivedClick]);\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  }, []);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={chatsHeight + archiveHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiChat, ApiFormattedText, ApiTopic, ApiMessage, ApiMessageOutgoingStatus,\n  ApiTypingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport type { AnimationLevel } from '../../../types';\n\nimport { IS_MULTITAB_SUPPORTED } from '../../../util/environment';\nimport {\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage, selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus, selectThreadInfo, selectThreadParam, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageAction } from '../../../global/helpers';\n\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport ListItem from '../../ui/ListItem';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport Badge from './Badge';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport TopicIcon from '../../common/TopicIcon';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  animationLevel?: AnimationLevel;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiFormattedText;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  animationLevel,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }, [markRenderDeleteModal, openDeleteModal]);\n\n  const handleDelete = useCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  }, [chat.id, deleteTopic, topic.id]);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    animationLevel,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  }, [openChat, chatId, topic.id, canScrollDown, focusLastMessage]);\n\n  const contextActions = useTopicContextActions(topic, chat, wasTopicOpened, canDelete, handleOpenDeleteModal);\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_MULTITAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <Badge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId)!;\n    const { senderId, replyToMessageId, isOutgoing } = lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      animationLevel: global.settings.byKey.animationLevel,\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { compact } from '../../../../util/iteratees';\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_MULTITAB_SUPPORTED } from '../../../../util/environment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions(\n  topic: ApiTopic,\n  chat: ApiChat,\n  wasOpened?: boolean,\n  canDelete?: boolean,\n  handleDelete?: NoneToVoidFunction,\n) {\n  const lang = useLang();\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_MULTITAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const newTabActionSeparator = actionOpenInNewTab && { isSeparator: true, key: 'newTabSeparator' };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: true }),\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      newTabActionSeparator,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker } from '../../../api/types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport { getHasAdminRight } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID,\n  TOPICS_SLICE, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA,\n} from '../../../config';\nimport { IS_TOUCH_ENV } from '../../../util/environment';\nimport {\n  selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useChatOrderDiff from './hooks/useChatOrderDiff';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Button from '../../ui/Button';\nimport Topic from './Topic';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport HeaderActions from '../../middle/HeaderActions';\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport EmptyForum from './EmptyForum';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  lastSyncTime?: number;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  lastSyncTime,\n  onTopicSearch,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (lastSyncTime && chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, lastSyncTime, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useCallback(() => {\n    closeForumPanel();\n  }, [closeForumPanel]);\n\n  const handleToggleChatInfo = useCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  }, [chat, openChatWithInfo]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useChatOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat || !lastSyncTime) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n      waitForTransitionEnd(ref.current!, () => {\n        dispatchHeavyAnimationStop();\n      });\n\n      if (isVisible) {\n        shouldRenderRef.current = true;\n        ref.current!.style.transform = 'none';\n      } else {\n        shouldRenderRef.current = false;\n        ref.current!.style.transform = '';\n      }\n    }\n  }, [isVisible, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              withForumActions\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps, detachWhenChanged): StateProps => {\n    detachWhenChanged(selectIsForumPanelOpen(global));\n\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastSyncTime: global.lastSyncTime,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n    };\n  },\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as T[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import React, {\n  memo,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChat } from '../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport buildClassName from '../../util/buildClassName';\nimport { getOrderedTopics } from '../../global/helpers';\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const lastMessage = renderLastMessage();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  function handleOpenTopic(e: React.MouseEvent<HTMLDivElement>) {\n    if (lastActiveTopic.unreadCount === 0) return;\n    e.stopPropagation();\n    e.preventDefault();\n    openChat({\n      id: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  }\n\n  useLayoutEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, lastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onMouseDown={IS_TOUCH_ENV ? undefined : handleOpenTopic}\n            onClick={IS_TOUCH_ENV ? handleOpenTopic : undefined}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onMouseDown={IS_TOUCH_ENV ? undefined : handleOpenTopic}\n        onClick={IS_TOUCH_ENV ? handleOpenTopic : undefined}\n      >\n        {lastMessage}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, { useLayoutEffect, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { AnimationLevel } from '../../../../types';\nimport type { LangFn } from '../../../../hooks/useLang';\nimport type {\n  ApiChat, ApiTopic, ApiMessage, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { Thread } from '../../../../global/types';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri, getMessageRoundVideo,\n  getMessageSenderName, getMessageSticker, getMessageVideo, isActionMessage, isChatChannel,\n} from '../../../../global/helpers';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport buildClassName from '../../../../util/buildClassName';\nimport useLang from '../../../../hooks/useLang';\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './useChatAnimationType';\nimport { fastRaf } from '../../../../util/schedulers';\n\nimport MessageSummary from '../../../common/MessageSummary';\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  animationLevel,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: Thread['draft'];\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  animationLevel?: AnimationLevel;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  function renderLastMessageOrTyping() {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities(draft.text, draft.entities, undefined, undefined, undefined, undefined, true)}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (animationLevel === 0 || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      fastRaf(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      fastRaf(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      fastRaf(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [animationLevel, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n  if(isSpoiler && message.chatId === getGlobal().currentUserId){\n    return messageSummary\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n      />\n      {getMessageVideo(message) && <i className=\"icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useMemo } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nexport default function useChatOrderDiff(orderedIds: (string | number)[] | undefined) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [orderById, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import { useRef } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isUserId,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isUserId(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './HeaderMenuContainer';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default memo(HeaderMenuContainerAsync);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useRef,\n  useCallback,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\nimport { ManagementScreens } from '../../types';\n\nimport { ANIMATION_LEVEL_MIN } from '../../config';\nimport { ARE_CALLS_SUPPORTED, IS_PWA } from '../../util/environment';\nimport {\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatBot,\n  selectIsUserBlocked,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n} from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\nimport { useHotkeys } from '../../hooks/useHotkeys';\n\nimport Button from '../ui/Button';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\nimport Account from \"../../worker/share/Account\";\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  withForumActions?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  withForumActions,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  }, []);\n\n  const handleHeaderMenuClose = useCallback(() => {\n    setIsMenuOpen(false);\n  }, []);\n\n  const handleHeaderMenuHide = useCallback(() => {\n    setMenuPosition(undefined);\n  }, []);\n\n  const handleSubscribeClick = useCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  }, [joinChannel, chatId, shouldSendJoinRequest, showNotification, isChannel, lang]);\n\n  const handleStartBot = useCallback(() => {\n\n    if(!Account.getCurrentAccount()?.getSession()){\n      getActions().updateGlobal({\n        authState:\"authorizationStateWaitSignPassword\"\n      })\n    }else{\n      if(Account.getCurrentAccount()?.getUid()){\n        sendBotCommand({ command: '/start' });\n      }else{\n        getActions().showNotification({\n          message:\"正在登录请稍后再试\"\n        })\n      }\n    }\n  }, [sendBotCommand]);\n\n  const handleRestartBot = useCallback(() => {\n    restartBot({ chatId });\n  }, [chatId, restartBot]);\n\n  const handleJoinRequestsClick = useCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  }, [requestNextManagementScreen]);\n\n  const handleSearchClick = useCallback(() => {\n    if (withForumActions) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because teact must update the state and render the async component\n      requestAnimationFrame(() => {\n        requestAnimationFrame(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  }, [isMobile, noAnimation, onTopicSearch, openLocalTextSearch, withForumActions]);\n\n  const handleAsMessagesClick = useCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  }, [chatId, openChat]);\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_PWA || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  }, [canSearch, handleSearchClick]);\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {/* {canSearch && ( */}\n          {/*   <Button */}\n          {/*     round */}\n          {/*     ripple={isRightColumnShown} */}\n          {/*     color=\"translucent\" */}\n          {/*     size=\"smaller\" */}\n          {/*     onClick={handleSearchClick} */}\n          {/*     ariaLabel=\"Search in this chat\" */}\n          {/*   > */}\n          {/*     <i className=\"icon-search\" /> */}\n          {/*   </Button> */}\n          {/* )} */}\n          {/*{canCall && (*/}\n          {/*  <Button*/}\n          {/*    round*/}\n          {/*    color=\"translucent\"*/}\n          {/*    size=\"smaller\"*/}\n          {/*    // eslint-disable-next-line react/jsx-no-bind*/}\n          {/*    onClick={handleRequestCall}*/}\n          {/*    ariaLabel=\"Call\"*/}\n          {/*  >*/}\n          {/*    <i className=\"icon-phone\" />*/}\n          {/*  </Button>*/}\n          {/*)}*/}\n        </>\n      )}\n      {!withForumActions && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon-user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      {/* <Button */}\n      {/*   ref={menuButtonRef} */}\n      {/*   className={isMenuOpen ? 'active' : ''} */}\n      {/*   round */}\n      {/*   ripple={!isMobile} */}\n      {/*   size=\"smaller\" */}\n      {/*   color=\"translucent\" */}\n      {/*   disabled={noMenu} */}\n      {/*   ariaLabel=\"More actions\" */}\n      {/*   onClick={handleHeaderMenuOpen} */}\n      {/* > */}\n      {/*   <i className=\"icon-more\" /> */}\n      {/* </Button> */}\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canRestartBot={canRestartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={withForumActions}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n      };\n    }\n\n    const bot = selectChatBot(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const canRestartBot = Boolean(bot && selectIsUserBlocked(global, bot.id));\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chat.fullInfo?.canViewStatistics;\n    const pendingJoinRequests = isMainThread ? chat.fullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = global.settings.byKey.animationLevel === ANIMATION_LEVEL_MIN;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomEmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(CustomEmojiTooltipAsync);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  }, [onFileSelect, onHide, withQuick]);\n\n  const handleQuickFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  }, [onHide]);\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(EmojiTooltipAsync);\n","import safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    this.container.appendChild(this.video);\n    this.recalculatePositionAndSize();\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    if (!this.video) return;\n    const { size, position: { x, y } } = this.options;\n    const { width, height } = this.container.getBoundingClientRect();\n    this.video.style.left = `${Math.round(x * width)}px`;\n    this.video.style.top = `${Math.round(y * height)}px`;\n    this.video.style.width = `${size}px`;\n    this.video.style.height = `${size}px`;\n  }\n}\n","import {\n  useCallback, useEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport RLottie from '../../../../lib/rlottie/RLottie';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getGlobal } from '../../../../global';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n  removeCustomEmojiInputRenderCallback,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { fastRaf } from '../../../../util/schedulers';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useDynamicColorListener from '../../../../hooks/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId?: string,\n  isActive?: boolean,\n) {\n  const { rgbColor: textColor } = useDynamicColorListener(inputRef);\n  const mapRef = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const removeContainers = useCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = mapRef.current.get(id);\n      if (player) {\n        player.destroy();\n        mapRef.current.delete(id);\n      }\n    });\n  }, []);\n\n  const synchronizeElements = useCallback(() => {\n    if (!inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n    const global = getGlobal();\n    const removedContainers = new Set(mapRef.current.keys());\n    const customEmojies = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojies.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const id = `${prefixId || ''}${element.dataset.uniqueId}${textColor?.join(',') || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      removedContainers.delete(id);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (mapRef.current.has(id)) {\n        const player = mapRef.current.get(id)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n\n      const animation = createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        uniqueId: id,\n        containerId: prefixId || id,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor,\n      });\n      animation.play();\n\n      mapRef.current.set(id, animation);\n    });\n\n    removeContainers(Array.from(removedContainers));\n  }, [absoluteContainerRef, textColor, inputRef, prefixId, removeContainers, sharedCanvasHqRef, sharedCanvasRef]);\n\n  useEffect(() => {\n    addCustomEmojiInputRenderCallback(synchronizeElements);\n\n    return () => {\n      removeCustomEmojiInputRenderCallback(synchronizeElements);\n    };\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive) {\n      removeContainers(Array.from(mapRef.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    fastRaf(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, removeContainers, sharedCanvasRef, isActive]);\n\n  useEffectWithPrevDeps(([prevTextColor]) => {\n    if (textColor !== prevTextColor) {\n      synchronizeElements();\n    }\n  }, [textColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n\n  const freezeAnimation = useCallback(() => {\n    mapRef.current.forEach((player) => {\n      player.pause();\n    });\n  }, []);\n\n  const unfreezeAnimation = useCallback(() => {\n    mapRef.current.forEach((player) => {\n      player.play();\n    });\n  }, []);\n\n  const unfreezeAnimationOnRaf = useCallback(() => {\n    fastRaf(unfreezeAnimation);\n  }, [unfreezeAnimation]);\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nfunction createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  uniqueId,\n  containerId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  uniqueId: string;\n  containerId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: [number, number, number];\n}): CustomEmojiPlayer {\n  if (customEmoji.isLottie) {\n    const lottie = RLottie.init(\n      containerId,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      undefined,\n      uniqueId,\n      mediaUrl,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      customEmoji.shouldUseTextColor ? textColor : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeContainer(uniqueId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(uniqueId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const absoluteVideo = new AbsoluteVideo(mediaUrl, absoluteContainerRef.current!, { size: SIZE, position });\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { RefObject, ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useRef, memo, useState, useCallback, useLayoutEffect,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/environment';\nimport { selectIsInSelectMode, selectReplyingToId } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  editableInputId?: string;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  editableInputId,\n  isActive,\n  getHtml,\n  placeholder,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  isSelectModeActive,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    isAttachmentModalInput ? 'attachment' : undefined,\n    isActive,\n  );\n\n  const maxInputHeight = isMobile ? 256 : 416;\n  const updateInputHeight = useCallback((willSend = false) => {\n    const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n    const clone = scrollerCloneRef.current!;\n    const currentHeight = Number(scroller.style.height.replace('px', ''));\n    const maxHeight = isAttachmentModalInput ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT : maxInputHeight;\n    const newHeight = Math.min(clone.scrollHeight, maxHeight);\n    if (newHeight === currentHeight) {\n      return;\n    }\n\n    const transitionDuration = Math.round(\n      TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n    );\n\n    const exec = () => {\n      scroller.style.height = `${newHeight}px`;\n      scroller.style.transitionDuration = `${transitionDuration}ms`;\n      scroller.classList.toggle('overflown', clone.scrollHeight > maxHeight);\n    };\n\n    if (willSend) {\n      // Sync with sending animation\n      requestAnimationFrame(exec);\n    } else {\n      exec();\n    }\n  }, [isAttachmentModalInput, maxInputHeight]);\n\n  useEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  }, []);\n\n  const handleCloseTextFormatter = useCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  }, [closeTextFormatter]);\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n    const html = getHtml();\n\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n    // let isFirstEditPos = false;\n    // if(window.getSelection()){\n      // const {startOffset,endOffset} = window.getSelection()!.getRangeAt(0);\n      // isFirstEditPos= (startOffset === endOffset) && startOffset === 0;\n    // }\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if(e.metaKey){\n\n      }else{\n        e.preventDefault();\n        closeTextFormatter();\n        onSend();\n        // if (\n        //   !(IS_IOS || IS_ANDROID)\n        //   && (\n        //     (messageSendKeyCombo === 'enter' && !e.shiftKey)\n        //     || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        //   )\n        // ) {\n        //   e.preventDefault();\n        //   closeTextFormatter();\n        //   onSend();\n        // }\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && (!html) && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || (IS_TOUCH_ENV && isMobile)\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobile, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestAnimationFrame(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText && <i className=\"icon-lock-badge placeholder-icon\" />}\n              {placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './SymbolMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default memo(SymbolMenuAsync);\n","import React, {\n  memo, useCallback, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { IAnchorPosition } from '../../../types';\nimport type { ApiVideo, ApiSticker } from '../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport useFlag from '../../../hooks/useFlag';\nimport useContextMenuPosition from '../../../hooks/useContextMenuPosition';\n\nimport Button from '../../ui/Button';\nimport Spinner from '../../ui/Spinner';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport SymbolMenu from './SymbolMenu.async';\nimport { BOTTOM_INPUT_LEFT_MARGIN } from '../../../worker/setting';\nimport {IS_ANDROID, IS_IOS} from \"../../../util/environment\";\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    shouldUpdateStickerSetsOrder?: boolean\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isReady,\n  isSymbolMenuOpen,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  isAttachmentModal,\n  canSendPlainText,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n  isSymbolMenuForced,\n  className,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  }, [closeBotCommandMenu, closeSendAsMenu, openSymbolMenu]);\n\n  const handleSearchOpen = useCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  }, [setStickerSearchQuery, setGifSearchQuery]);\n\n  const handleSymbolMenuOpen = useCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : EDITABLE_INPUT_CSS_SELECTOR,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  }, [isAttachmentModal, isMobile, openSymbolMenu, closeBotCommandMenu]);\n\n  const getTriggerElement = useCallback(() => triggerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => document.querySelector('#portals .SymbolMenu .bubble'),\n    [],\n  );\n\n  const getLayout = useCallback(() => ({\n    withPortal: true,\n  }), []);\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      <div style={(IS_ANDROID || IS_IOS) ? BOTTOM_INPUT_LEFT_MARGIN : \"\"}></div>\n      {/* {isMobile ? ( */}\n      {/*   <Button */}\n      {/*     className={symbolMenuButtonClassName} */}\n      {/*     round */}\n      {/*     color=\"translucent\" */}\n      {/*     onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen} */}\n      {/*     ariaLabel=\"Choose emoji, sticker or GIF\" */}\n      {/*   > */}\n      {/*     <i className=\"icon-smile\" /> */}\n      {/*     <i className=\"icon-keyboard\" /> */}\n      {/*     {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />} */}\n      {/*   </Button> */}\n      {/* ) : ( */}\n      {/*   <ResponsiveHoverButton */}\n      {/*     className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')} */}\n      {/*     round */}\n      {/*     color=\"translucent\" */}\n      {/*     onActivate={handleActivateSymbolMenu} */}\n      {/*     ariaLabel=\"Choose emoji, sticker or GIF\" */}\n      {/*   > */}\n      {/*     <div ref={triggerRef} className=\"symbol-menu-trigger\" /> */}\n      {/*     <i className=\"icon-smile\" /> */}\n      {/*   </ResponsiveHoverButton> */}\n      {/* )} */}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={className}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  }, [selectedRange]);\n\n  const updateSelectedRange = useCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  }, [setSelectedRange]);\n\n  const getSelectedText = useCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  }, [selectedRange]);\n\n  const getSelectedElement = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  }, [selectedRange]);\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  }, [getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.spoiler]);\n\n  const handleBoldText = useCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  }, [updateSelectedRange]);\n\n  const handleItalicText = useCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleUnderlineText = useCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleStrikethroughText = useCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.strikethrough,\n  ]);\n\n  const handleMonospaceText = useCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.monospace,\n  ]);\n\n  const handleLinkUrlConfirm = useCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  }, [getSelectedElement, getSelectedText, isEditingLink, linkUrl, onClose, restoreSelection]);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  }, [\n    openLinkControl, handleBoldText, handleUnderlineText, handleItalicText, handleMonospaceText,\n    handleStrikethroughText, handleSpoilerText,\n  ]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useCallback, useEffect } from '../../../../lib/teact/teact';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getActions } from '../../../../global';\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/environment';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestAnimationFrame(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  }, [getLastEmoji, isEnabled, inputRef, setHtml]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useCallback, useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  }, []);\n\n  const insertEmoji = useCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  }, [getHtml, setHtml, inputId, updateFiltered]);\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport {\n  useCallback, useEffect, useState,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { ApiMessageEntityTypes } from '../../../../api/types';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${getUserFirstOrLastName(user)}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestAnimationFrame(() => {\n        focusEditableElement(inputEl, forceFocus);\n      });\n    }\n\n    setFilteredUsers(undefined);\n  }, [inputRef, setHtml]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import React, {\n  useCallback, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiMessage } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport {\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  getMessageMediaHash,\n  getMediaTransferState,\n  isOwnMessage,\n  getMessageMediaFormat,\n  getMessageMediaThumbDataUri,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport {getPasswordFromEvent} from \"../../../worker/share/utils/utils\";\nimport {blobToBuffer, blobToDataUri, fetchBlob} from \"../../../util/files\";\nimport {\n  readBytes,\n  readInt16,\n  wrapByteBuffer,\n} from \"../../../lib/ptp/protobuf/BaseMsg\";\nimport Account from \"../../../worker/share/Account\";\nimport {getGlobal} from \"../../../global\";\nimport {hashSha256} from \"../../../worker/share/utils/helpers\";\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nexport const photosMap:Record<string, string> = {}\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [decryptUrl,setDecryptUrl] = useState(\"\");\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(photo.isSpoiler);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useCallback(async () => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      if(message.chatId === getGlobal().currentUserId){\n        const data = await fetchBlob(fullMediaData);\n        const buf = await blobToBuffer(data);\n        const bb = wrapByteBuffer(buf);\n        const encryptTypeLne = readInt16(bb)\n        const encryptType = readBytes(bb,encryptTypeLne)\n        if(encryptType.toString() === \"EN\"){\n          const typeLen = readInt16(bb)\n          const type = readBytes(bb,typeLen);\n          if(type.toString().indexOf(\"image/\") === 0){\n            const hintLen = readInt16(bb)\n            let hint\n            if(hintLen){\n              hint = readBytes(bb,hintLen);\n              hint = hint.toString();\n            }\n            const {password} = await getPasswordFromEvent(hint,true);\n            const body = buf.subarray(2 * 3 + encryptTypeLne + typeLen + hintLen)\n            const decryptData = await Account.getCurrentAccount()?.decryptByPrvKey(body,hashSha256(password));\n            const uri = await blobToDataUri(new Blob([decryptData],{type:\"image/jpeg\"}))\n            setDecryptUrl(uri);\n            photosMap[getMessageMediaHash(message, 'full')!] = uri;\n            photosMap[getMessageMediaHash(message, 'preview')!] = uri;\n          }\n        }\n      }\n\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  }, [fullMediaData, hideSpoiler, isSpoilerShown, isUploading, message, onCancelUpload, onClick]);\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isInSelectMode, isSelected, theme).then((appendixBg) => {\n        contentEl.style.setProperty('--appendix-bg', appendixBg);\n        contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      <img\n        src={decryptUrl ? decryptUrl : fullMediaData}\n        className=\"full-media\"\n        alt=\"\"\n        draggable={!isProtected}\n      />\n\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <i className={buildClassName('icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, inSelectMode?: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\nimport { calculateInlineImageDimensions, calculateVideoDimensions } from '../../../common/helpers/mediaDimensions';\nimport {\n  getMessageText,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n  getMessageVideo,\n  getMessageWebPageVideo,\n} from '../../../../global/helpers';\n\nconst MIN_MEDIA_WIDTH = 100;\nconst MIN_MEDIA_WIDTH_WITH_COMMENTS = 238;\nconst MIN_MEDIA_WIDTH_WITH_TEXT = 175;\nconst MIN_MEDIA_WIDTH_WITH_TEXT_AND_COMMENTS = 238;\nconst MIN_MEDIA_HEIGHT = 90;\nconst SMALL_IMAGE_THRESHOLD = 12;\n\nexport function getMinMediaWidth(hasText?: boolean, hasCommentButton?: boolean) {\n  return hasText\n    ? (hasCommentButton ? MIN_MEDIA_WIDTH_WITH_TEXT_AND_COMMENTS : MIN_MEDIA_WIDTH_WITH_TEXT)\n    : (hasCommentButton ? MIN_MEDIA_WIDTH_WITH_COMMENTS : MIN_MEDIA_WIDTH);\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const hasText = Boolean(getMessageText(message));\n  const minMediaWidth = getMinMediaWidth(hasText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/environment';\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useAppLayout from '../../../../hooks/useAppLayout';\n\nexport default function useBlurredMediaThumbRef(message: ApiMessage, isDisabled?: boolean | string) {\n  const { isMobile } = useAppLayout();\n\n  return useCanvasBlur(\n    getMessageMediaThumbDataUri(message),\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo, useState } from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\nexport type IRadioOption = {\n  label: string;\n  subLabel?: string;\n  disabled?: boolean;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={option.disabled || disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useState, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToFile, blobToDataUri } from '../../util/files';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\nimport Loading from './Loading';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const lang = useLang();\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title=\"Drag to reposition\"\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropImage')}\n      >\n        <i className=\"icon-check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useRef, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV, MouseButton } from '../../util/environment';\nimport { fastRaf } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RippleEffect from './RippleEffect';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\nimport Button from './Button';\n\nimport './ListItem.scss';\n\ntype MenuItemContextActionItem = {\n  title: string;\n  icon: string;\n  destructive?: boolean;\n  handler?: () => void;\n};\n\ntype MenuItemContextActionSeparator = {\n  isSeparator: true;\n  key?: string;\n};\n\nexport type MenuItemContextAction = MenuItemContextActionItem | MenuItemContextActionSeparator;\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement | HTMLAnchorElement>;\n  icon?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: string;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  withPortalForMenu?: boolean;\n  href?: string;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLElement>, arg?: any) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n}\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  leftElement,\n  buttonClassName,\n  secondaryIcon,\n  rightElement,\n  className,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  multiline,\n  isStatic,\n  contextActions,\n  withPortalForMenu,\n  href,\n  onMouseDown,\n  onClick,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useCallback(() => containerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => containerRef.current!.closest('.custom-scroll'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => (withPortalForMenu ? document.querySelector('#portals') : containerRef.current)!\n      .querySelector('.ListItem-context-menu .bubble'),\n    [withPortalForMenu],\n  );\n\n  const getLayout = useCallback(\n    () => ({ withPortal: withPortalForMenu }),\n    [withPortalForMenu],\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClickEvent = useCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n    if (!hasModifierKey && e.button === MouseButton.Main) {\n      e.preventDefault();\n    }\n  }, []);\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n\n    if (href) {\n      // Allow default behavior for opening links in new tab\n      const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n      if ((hasModifierKey && e.button === MouseButton.Main) || e.button === MouseButton.Auxiliary) {\n        return;\n      }\n\n      e.preventDefault();\n    }\n\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      fastRaf(unmarkIsTouched);\n    }\n  }, [allowDisabledClick, clickArg, disabled, markIsTouched, onClick, ripple, unmarkIsTouched, href]);\n\n  const handleSecondaryIconClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n    e.stopPropagation();\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  };\n\n  const handleMouseDown = useCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === MouseButton.Main) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  }, [inactive, contextActions, onClick, handleBeforeContextMenu, handleContextMenu, handleClick]);\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    !isStatic && 'no-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  const ButtonElementTag = href ? 'a' : 'div';\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n    >\n      <ButtonElementTag\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'button' : undefined}\n        href={href}\n        ref={buttonRef as any /* TS requires specific types for refs */}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : handleClickEvent}\n        onMouseDown={handleMouseDown}\n        onContextMenu={(!inactive && contextActions) ? handleContextMenu : undefined}\n      >\n        {leftElement}\n        {icon && (\n          <i className={`icon-${icon}`} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {secondaryIcon && (\n          <Button\n            className=\"secondary-icon\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={IS_TOUCH_ENV ? handleSecondaryIconClick : undefined}\n            onMouseDown={!IS_TOUCH_ENV ? handleSecondaryIconClick : undefined}\n          >\n            <i className={`icon-${secondaryIcon}`} />\n          </Button>\n        )}\n        {rightElement}\n      </ButtonElementTag>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GC8g9Q16IaK76g6rcU78\"};","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className }) => {\n  return (\n    <div className={buildClassName(styles.root, className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TextPart } from '../../types';\nimport type { CallbackAction } from '../../global/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\nimport Button from './Button';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  title?: TextPart[];\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n  action?: CallbackAction;\n  actionText?: string;\n  className?: string;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  title, className,\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n  action, actionText,\n}) => {\n  const actions = getActions();\n\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  const handleClick = useCallback(() => {\n    if (action) {\n      // @ts-ignore\n      actions[action.action](action.payload);\n    }\n    closeAndDismiss();\n  }, [action, actions, closeAndDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {title && <div className=\"notification-title\">{title}</div>}\n          {message}\n        </div>\n        {action && actionText && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleClick}\n            className=\"Notification-button\"\n          >\n            {actionText}\n          </Button>\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useRef, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!container.current) {\n      return;\n    }\n\n    const svg = container.current.firstElementChild;\n    const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n    if (!svg) {\n      container.current.innerHTML = `<svg\n        viewBox=\"0 0 ${borderRadius * 2} ${borderRadius * 2}\"\n        height=\"${borderRadius * 2}\"\n        width=\"${borderRadius * 2}\"\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width=${STROKE_WIDTH}\n          stroke-dasharray=\"${circumference} ${circumference}\"}\n          stroke-dashoffset=\"${strokeDashOffset}\"\n          stroke-linecap=\"round\"\n          r=${circleRadius}\n          cx=${borderRadius}\n          cy=${borderRadius}\n        />\n      </svg>`;\n    } else {\n      (svg.firstElementChild as SVGElement).setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n    }\n  }, [container, circumference, borderRadius, circleRadius, progress]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      ref={container}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, useMemo, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n}) => {\n  const lang = useLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  return (\n    <div className={mainClassName}>\n      {label && (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <span className=\"label\" dir=\"auto\">{label}</span>\n          {!options && (\n            <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n          )}\n        </div>\n      )}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option no-selection', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useRef, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from './Loading';\nimport Button from './Button';\nimport ShowTransition from './ShowTransition';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <i className=\"icon-search\" />\n      <ShowTransition isOpen={Boolean(isLoading)} className=\"slow\">\n        <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n      </ShowTransition>\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  shouldAnimateFirstRender?: boolean;\n  children: React.ReactNode;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n  shouldAnimateFirstRender,\n}) => {\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen && !isHidden,\n    undefined,\n    isFirstRender && !shouldAnimateFirstRender,\n    isCustom ? false : undefined,\n    noCloseTransition,\n  );\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div id={id} className={buildClassName(className, transitionClassNames)} onClick={onClick}>\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = forceAspectRatio ? aspectRatio\n    : buildStyle(Boolean(width) && `width: ${width}px`, Boolean(height) && `height: ${height}px`);\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { pick, omit } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters'\n);\nexport type FolderEditDispatch = Dispatch<FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import useThrottledCallback from './useThrottledCallback';\nimport useDebouncedCallback from './useDebouncedCallback';\n\nexport function useThrottledResolver<T>(resolver: () => T, deps: any[], ms: number, noFirst = false) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst);\n}\n\nexport function useDebouncedResolver<T>(resolver: () => T, deps: any[], ms: number, noFirst = false, noLast = false) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import {\n  useCallback, useEffect, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport { register } from '../util/audioPlayer';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { selectTabState } from '../global/selectors';\n\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  }, [onTrackChange]);\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useCallback(() => {\n    if (src) {\n      play(src);\n    }\n  }, [src, play]);\n\n  const playPause = useCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  }, [pause, playIfPresent, isPlaying]);\n\n  const setTime = useCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, proxy, setCurrentTime]);\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/environment';\nimport fastBlur from '../lib/fastBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      canvas.width = preferredWidth || img.width;\n      canvas.height = preferredHeight || img.height;\n\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      if (IS_CANVAS_FILTER_SUPPORTED) {\n        ctx.filter = `blur(${radius}px)`;\n      }\n\n      ctx.drawImage(img, -radius * 2, -radius * 2, canvas.width + radius * 4, canvas.height + radius * 4);\n\n      if (!IS_CANVAS_FILTER_SUPPORTED) {\n        fastBlur(ctx, 0, 0, canvas.width, canvas.height, radius, ITERATIONS);\n      }\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestAnimationFrame(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { IS_MULTITAB_SUPPORTED } from '../util/environment';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  isChatArchived, getCanDeleteChat, isUserId, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete: () => void;\n  handleChatFolderChange: () => void;\n  handleReport?: () => void;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n  return null\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_MULTITAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id });\n      },\n    };\n\n    const newTabActionSeparator = actionOpenInNewTab && { isSeparator: true, key: 'newTabSeparator' };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder]);\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: true }),\n      };\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      newTabActionSeparator,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { RefObject } from 'react';\nimport { useState, useEffect, useCallback } from '../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../types';\nimport {\n  IS_TOUCH_ENV, IS_PWA, IS_IOS,\n} from '../util/environment';\n\nconst LONG_TAP_DURATION_MS = 200;\nconst IOS_PWA_CONTEXT_MENU_DELAY_MS = 100;\n\nfunction stopEvent(e: Event) {\n  e.stopImmediatePropagation();\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nconst useContextMenuHandlers = (\n  elementRef: RefObject<HTMLElement>,\n  isMenuDisabled?: boolean,\n  shouldDisableOnLink?: boolean,\n  shouldDisableOnLongTap?: boolean,\n) => {\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleBeforeContextMenu = useCallback((e: React.MouseEvent) => {\n    if (!isMenuDisabled && e.button === 2) {\n      (e.target as HTMLElement).classList.add('no-selection');\n    }\n  }, [isMenuDisabled]);\n\n  const handleContextMenu = useCallback((e: React.MouseEvent) => {\n    (e.target as HTMLElement).classList.remove('no-selection');\n\n    if (isMenuDisabled || (shouldDisableOnLink && (e.target as HTMLElement).matches('a[href]'))) {\n      return;\n    }\n    e.preventDefault();\n\n    if (contextMenuPosition) {\n      return;\n    }\n\n    setIsContextMenuOpen(true);\n    setContextMenuPosition({ x: e.clientX, y: e.clientY });\n  }, [isMenuDisabled, shouldDisableOnLink, contextMenuPosition]);\n\n  const handleContextMenuClose = useCallback(() => {\n    setIsContextMenuOpen(false);\n  }, []);\n\n  const handleContextMenuHide = useCallback(() => {\n    setContextMenuPosition(undefined);\n  }, []);\n\n  // Support context menu on touch devices\n  useEffect(() => {\n    if (isMenuDisabled || !IS_TOUCH_ENV || shouldDisableOnLongTap) {\n      return undefined;\n    }\n\n    const element = elementRef.current;\n    if (!element) {\n      return undefined;\n    }\n\n    let timer: number | undefined;\n\n    const clearLongPressTimer = () => {\n      if (timer) {\n        clearTimeout(timer);\n        timer = undefined;\n      }\n    };\n\n    const emulateContextMenuEvent = (originalEvent: TouchEvent) => {\n      clearLongPressTimer();\n\n      const { clientX, clientY, target } = originalEvent.touches[0];\n\n      if (contextMenuPosition || (shouldDisableOnLink && (target as HTMLElement).matches('a[href]'))) {\n        return;\n      }\n\n      // Temporarily intercept and clear the next click\n      element.addEventListener('touchend', (e) => {\n        // On iOS in PWA mode, the context menu may cause click-through to the element in the menu upon opening\n        if (IS_IOS && IS_PWA) {\n          setTimeout(() => {\n            element.removeEventListener('mousedown', stopEvent, {\n              capture: true,\n            });\n            element.removeEventListener('click', stopEvent, {\n              capture: true,\n            });\n          }, IOS_PWA_CONTEXT_MENU_DELAY_MS);\n        }\n        stopEvent(e);\n      }, {\n        once: true,\n        capture: true,\n      });\n\n      // On iOS15, in PWA mode, the context menu immediately closes after opening\n      if (IS_PWA && IS_IOS) {\n        element.addEventListener('mousedown', stopEvent, {\n          once: true,\n          capture: true,\n        });\n        element.addEventListener('click', stopEvent, {\n          once: true,\n          capture: true,\n        });\n      }\n\n      setIsContextMenuOpen(true);\n      setContextMenuPosition({ x: clientX, y: clientY });\n    };\n\n    const startLongPressTimer = (e: TouchEvent) => {\n      if (isMenuDisabled) {\n        return;\n      }\n      clearLongPressTimer();\n\n      timer = window.setTimeout(() => emulateContextMenuEvent(e), LONG_TAP_DURATION_MS);\n    };\n\n    // @perf Consider event delegation\n    element.addEventListener('touchstart', startLongPressTimer, { passive: true });\n    element.addEventListener('touchcancel', clearLongPressTimer, true);\n    element.addEventListener('touchend', clearLongPressTimer, true);\n    element.addEventListener('touchmove', clearLongPressTimer, { passive: true });\n\n    return () => {\n      clearLongPressTimer();\n      element.removeEventListener('touchstart', startLongPressTimer);\n      element.removeEventListener('touchcancel', clearLongPressTimer, true);\n      element.removeEventListener('touchend', clearLongPressTimer, true);\n      element.removeEventListener('touchmove', clearLongPressTimer);\n    };\n  }, [contextMenuPosition, isMenuDisabled, shouldDisableOnLongTap, elementRef, shouldDisableOnLink]);\n\n  return {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  };\n};\n\nexport default useContextMenuHandlers;\n","import { useState, useEffect } from '../lib/teact/teact';\nimport type { IAnchorPosition } from '../types';\n\ninterface Layout {\n  extraPaddingX?: number;\n  extraTopPadding?: number;\n  marginSides?: number;\n  extraMarginTop?: number;\n  withPortal?: boolean;\n}\n\nconst MENU_POSITION_VISUAL_COMFORT_SPACE_PX = 16;\nconst MENU_POSITION_BOTTOM_MARGIN = 12;\nconst EMPTY_RECT = {\n  width: 0, left: 0, height: 0, top: 0,\n};\n\nexport default function useContextMenuPosition(\n  anchor: IAnchorPosition | undefined,\n  getTriggerElement: () => HTMLElement | null,\n  getRootElement: () => HTMLElement | null,\n  getMenuElement: () => HTMLElement | null,\n  getLayout?: () => Layout,\n) {\n  const [positionX, setPositionX] = useState<'right' | 'left'>('right');\n  const [positionY, setPositionY] = useState<'top' | 'bottom'>('bottom');\n  const [transformOriginX, setTransformOriginX] = useState<number>();\n  const [transformOriginY, setTransformOriginY] = useState<number>();\n  const [withScroll, setWithScroll] = useState(false);\n  const [style, setStyle] = useState('');\n  const [menuStyle, setMenuStyle] = useState('opacity: 0;');\n\n  useEffect(() => {\n    const triggerEl = getTriggerElement();\n    if (!anchor || !triggerEl) {\n      return;\n    }\n\n    let { x, y } = anchor;\n    const anchorX = x;\n    const anchorY = y;\n\n    const menuEl = getMenuElement();\n    const rootEl = getRootElement();\n\n    const {\n      extraPaddingX = 0,\n      extraTopPadding = 0,\n      marginSides = 0,\n      extraMarginTop = 0,\n      withPortal = false,\n    } = getLayout?.() || {};\n\n    const marginTop = menuEl ? parseInt(getComputedStyle(menuEl).marginTop, 10) + extraMarginTop : undefined;\n\n    const menuRect = menuEl ? {\n      width: menuEl.offsetWidth,\n      height: menuEl.offsetHeight + marginTop!,\n    } : EMPTY_RECT;\n\n    const rootRect = rootEl ? rootEl.getBoundingClientRect() : EMPTY_RECT;\n\n    let horizontalPosition: 'left' | 'right';\n    let verticalPosition: 'top' | 'bottom';\n    if (x + menuRect.width + extraPaddingX < rootRect.width + rootRect.left) {\n      x += 3;\n      horizontalPosition = 'left';\n    } else if (x - menuRect.width - rootRect.left > 0) {\n      horizontalPosition = 'right';\n      x -= 3;\n    } else {\n      horizontalPosition = 'left';\n      x = 16;\n    }\n    setPositionX(horizontalPosition);\n\n    if (marginSides\n      && horizontalPosition === 'right' && (x + extraPaddingX + marginSides >= rootRect.width + rootRect.left)) {\n      x -= marginSides;\n    }\n\n    if (marginSides && horizontalPosition === 'left') {\n      if (x + extraPaddingX + marginSides + menuRect.width >= rootRect.width + rootRect.left) {\n        x -= marginSides;\n      } else if (x - marginSides <= 0) {\n        x += marginSides;\n      }\n    }\n\n    if (y + menuRect.height < rootRect.height + rootRect.top) {\n      verticalPosition = 'top';\n    } else {\n      verticalPosition = 'bottom';\n\n      if (y - menuRect.height < rootRect.top + extraTopPadding) {\n        y = rootRect.top + rootRect.height;\n      }\n    }\n    setPositionY(verticalPosition);\n\n    const triggerRect = triggerEl.getBoundingClientRect();\n\n    const addedYForPortalPositioning = (withPortal ? triggerRect.top : 0);\n    const addedXForPortalPositioning = (withPortal ? triggerRect.left : 0);\n\n    const leftWithPossibleNegative = Math.min(\n      x - triggerRect.left,\n      rootRect.width - menuRect.width - MENU_POSITION_VISUAL_COMFORT_SPACE_PX,\n    );\n    const left = (horizontalPosition === 'left'\n      ? (withPortal\n        ? Math.max(MENU_POSITION_VISUAL_COMFORT_SPACE_PX, leftWithPossibleNegative)\n        : leftWithPossibleNegative)\n      : (x - triggerRect.left)) + addedXForPortalPositioning;\n    const top = y - triggerRect.top + addedYForPortalPositioning;\n\n    const menuMaxHeight = rootRect.height - MENU_POSITION_BOTTOM_MARGIN - (marginTop || 0);\n\n    setWithScroll(menuMaxHeight < menuRect.height);\n    setMenuStyle(`max-height: ${menuMaxHeight}px;`);\n    setStyle(`left: ${left}px; top: ${top}px`);\n    const offsetX = (anchorX + addedXForPortalPositioning - triggerRect.left) - left;\n    const offsetY = (anchorY + addedYForPortalPositioning - triggerRect.top) - top - (marginTop || 0);\n    setTransformOriginX(horizontalPosition === 'left' ? offsetX : menuRect.width + offsetX);\n    setTransformOriginY(verticalPosition === 'bottom' ? menuRect.height + offsetY : offsetY);\n  }, [\n    anchor, getMenuElement, getRootElement, getTriggerElement, getLayout,\n  ]);\n\n  return {\n    positionX,\n    positionY,\n    transformOriginX,\n    transformOriginY,\n    style,\n    menuStyle,\n    withScroll,\n  };\n}\n","import type { Signal } from '../util/signals';\n\nimport useSyncEffect from './useSyncEffect';\nimport useSignal from './useSignal';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst useEnsureMessage = (\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) => {\n  const { loadMessage } = getActions();\n  const loadMessageThrottled = useMemo(() => {\n    const throttled = throttle(loadMessage, 500, true);\n    return () => {\n      throttled({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    };\n  }, [loadMessage, chatId, messageId, replyOriginForId]);\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessageThrottled();\n    }\n  });\n};\n\nexport default useEnsureMessage;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  getOrderedIds,\n  getUnreadCounters,\n  getChatsCount,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  addChatsCountCallback,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    forceUpdate();\n  }, [forceUpdate]);\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    handleForumPanelAnimationEnd,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n    if(container){\n      container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n    }\n    return () => {\n      if(container){\n        container.removeEventListener('wheel', handleScroll);\n      }\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\nimport { createCallbackManager } from '../util/callbacks';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestAnimationFrame(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useLayoutEffect } from '../lib/teact/teact';\nimport usePrevious from './usePrevious';\n\nconst useLayoutEffectWithPrevDeps = <T extends readonly any[]>(\n  cb: (args: T | readonly []) => void, dependencies: T, debugKey?: string,\n) => {\n  const prevDeps = usePrevious<T>(dependencies);\n  return useLayoutEffect(() => {\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies, debugKey);\n};\n\nexport default useLayoutEffectWithPrevDeps;\n","import { useRef } from '../lib/teact/teact';\nimport generateIdFor from '../util/generateIdFor';\n\nconst store: Record<string, boolean> = {};\n\nconst useUniqueId = () => {\n  const idRef = useRef<string>();\n\n  if (!idRef.current) {\n    idRef.current = generateIdFor(store);\n    store[idRef.current] = true;\n  }\n\n  return idRef.current;\n};\n\nexport default useUniqueId;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/environment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, isStreaming, delay, handleProgress,\n    isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/environment';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  }, [menuCloseTimeout, onClose]);\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation(current: any, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<Actions> = (action: ReducerAction<Actions>) => void;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './CalendarModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default memo(CalendarModalAsync);\n","import React, { useCallback, useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport useLang from './useLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\nimport { getServerTimeOffset } from '../util/serverTime';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  }, [onScheduled]);\n\n  const handleMessageScheduleUntilOnline = useCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  }, [handleMessageSchedule]);\n\n  const handleCloseCalendar = useCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  }, [onCancel]);\n\n  const requestCalendar = useCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  }, []);\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useSyncEffect from './useSyncEffect';\n\n// Allows to use state value as \"silent\" dependency in hooks (not causing updates).\n// Also useful for state values that update frequently (such as controlled input value).\nexport function useStateRef<T>(value: T) {\n  const ref = useRef<T>(value);\n\n  useSyncEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref;\n}\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-multi-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-const */\n/* eslint-disable eqeqeq */\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\nSuperfast Blur - a fast Box Blur For Canvas\n\nVersion:     0.5\nAuthor:        Mario Klingemann\nContact:     mario@quasimondo.com\nWebsite:    http://www.quasimondo.com/BoxBlurForCanvas\nTwitter:    @quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr:\nhttps://flattr.com/thing/140066/Superfast-Blur-a-pretty-fast-Box-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2011 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// eslint-disable-next-line max-len\nconst mul_table = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\n// eslint-disable-next-line max-len\nconst shg_table = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n\nexport default function boxBlurCanvasRGB(context, top_x, top_y, width, height, radius, iterations) {\n  if (Number.isNaN(radius) || radius < 1) return;\n\n  radius |= 0;\n\n  if (Number.isNaN(iterations)) iterations = 1;\n  iterations |= 0;\n  if (iterations > 3) iterations = 3;\n  if (iterations < 1) iterations = 1;\n\n  const imageData = context.getImageData(top_x, top_y, width, height);\n\n  const pixels = imageData.data;\n\n  let rsum;\n  let gsum;\n  let bsum;\n  let x;\n  let y;\n  let i;\n  let p;\n  let p1;\n  let p2;\n  let yp;\n  let yi;\n  let yw;\n  let wm = width - 1;\n  let hm = height - 1;\n  let rad1 = radius + 1;\n\n  let r = [];\n  let g = [];\n  let b = [];\n\n  let mul_sum = mul_table[radius];\n  let shg_sum = shg_table[radius];\n\n  let vmin = [];\n  let vmax = [];\n\n  while (iterations-- > 0) {\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      rsum = pixels[yw] * rad1;\n      gsum = pixels[yw + 1] * rad1;\n      bsum = pixels[yw + 2] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        p = yw + (((i > wm ? wm : i)) << 2);\n        rsum += pixels[p++];\n        gsum += pixels[p++];\n        bsum += pixels[p++];\n      }\n\n      for (x = 0; x < width; x++) {\n        r[yi] = rsum;\n        g[yi] = gsum;\n        b[yi] = bsum;\n\n        if (y == 0) {\n          vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n          vmax[x] = ((p = x - radius) > 0 ? p << 2 : 0);\n        }\n\n        p1 = yw + vmin[x];\n        p2 = yw + vmax[x];\n\n        rsum += pixels[p1++] - pixels[p2++];\n        gsum += pixels[p1++] - pixels[p2++];\n        bsum += pixels[p1++] - pixels[p2++];\n\n        yi++;\n      }\n      yw += (width << 2);\n    }\n\n    for (x = 0; x < width; x++) {\n      yp = x;\n      rsum = r[yp] * rad1;\n      gsum = g[yp] * rad1;\n      bsum = b[yp] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        yp += (i > hm ? 0 : width);\n        rsum += r[yp];\n        gsum += g[yp];\n        bsum += b[yp];\n      }\n\n      yi = x << 2;\n      for (y = 0; y < height; y++) {\n        pixels[yi] = (rsum * mul_sum) >>> shg_sum;\n        pixels[yi + 1] = (gsum * mul_sum) >>> shg_sum;\n        pixels[yi + 2] = (bsum * mul_sum) >>> shg_sum;\n\n        if (x == 0) {\n          vmin[y] = ((p = y + rad1) < hm ? p : hm) * width;\n          vmax[y] = ((p = y - radius) > 0 ? p * width : 0);\n        }\n\n        p1 = x + vmin[y];\n        p2 = x + vmax[y];\n\n        rsum += r[p1] - r[p2];\n        gsum += g[p1] - g[p2];\n        bsum += b[p1] - b[p2];\n\n        yi += width << 2;\n      }\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n","import type { RLottieApi } from './rlottie.worker';\n\nimport {\n  DPR, IS_SAFARI, IS_ANDROID, IS_IOS,\n} from '../../util/environment';\nimport { createConnector } from '../../util/PostMessageConnector';\nimport { animate } from '../../util/animation';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { fastRaf } from '../../util/schedulers';\n\ninterface Params {\n  noLoop?: boolean;\n  size?: number;\n  quality?: number;\n  isLowPriority?: boolean;\n  coords?: { x: number; y: number };\n}\n\nconst WAITING = Symbol('WAITING');\ntype Frame =\n  undefined\n  | typeof WAITING\n  | ImageBitmap;\n\nconst MAX_WORKERS = 4;\nconst HIGH_PRIORITY_QUALITY = (IS_ANDROID || IS_IOS) ? 0.75 : 1;\nconst LOW_PRIORITY_QUALITY = IS_ANDROID ? 0.5 : 0.75;\nconst LOW_PRIORITY_QUALITY_SIZE_THRESHOLD = 24;\nconst HIGH_PRIORITY_CACHE_MODULO = IS_SAFARI ? 2 : 4;\nconst LOW_PRIORITY_CACHE_MODULO = 0;\n\nconst instancesById = new Map<string, RLottie>();\n\nconst workers = new Array(MAX_WORKERS).fill(undefined).map(\n  () => createConnector<RLottieApi>(new Worker(new URL('./rlottie.worker.ts', import.meta.url))),\n);\nlet lastWorkerIndex = -1;\n\nclass RLottie {\n  // Config\n\n  private containers = new Map<string, {\n    canvas: HTMLCanvasElement;\n    ctx: CanvasRenderingContext2D;\n    isLoaded?: boolean;\n    isPaused?: boolean;\n    isSharedCanvas?: boolean;\n    coords?: Params['coords'];\n    onLoad?: NoneToVoidFunction;\n  }>();\n\n  private imgSize!: number;\n\n  private imageData!: ImageData;\n\n  private msPerFrame = 1000 / 60;\n\n  private reduceFactor = 1;\n\n  private cacheModulo!: number;\n\n  private workerIndex!: number;\n\n  private frames: Frame[] = [];\n\n  private framesCount?: number;\n\n  // State\n\n  private isAnimating = false;\n\n  private isWaiting = true;\n\n  private isEnded = false;\n\n  private isDestroyed = false;\n\n  private isRendererInited = false;\n\n  private approxFrameIndex = 0;\n\n  private prevFrameIndex = -1;\n\n  private stopFrameIndex? = 0;\n\n  private speed = 1;\n\n  private direction: 1 | -1 = 1;\n\n  private lastRenderAt?: number;\n\n  static init(...args: ConstructorParameters<typeof RLottie>) {\n    const [container, canvas, onLoad, id, , params] = args;\n    let instance = instancesById.get(id);\n\n    if (!instance) {\n      // eslint-disable-next-line prefer-rest-params\n      instance = new RLottie(...args);\n      instancesById.set(id, instance);\n    } else {\n      instance.addContainer(container, canvas, onLoad, params?.coords);\n    }\n\n    return instance;\n  }\n\n  constructor(\n    containerId: string,\n    container: HTMLDivElement | HTMLCanvasElement,\n    onLoad: NoneToVoidFunction | undefined,\n    private id: string,\n    private tgsUrl: string,\n    private params: Params = { },\n    private customColor?: [number, number, number],\n    private onEnded?: (isDestroyed?: boolean) => void,\n    private onLoop?: () => void,\n  ) {\n    this.addContainer(containerId, container, onLoad, params.coords);\n    this.initConfig();\n    this.initRenderer();\n  }\n\n  public removeContainer(containerId: string) {\n    const {\n      canvas, ctx, isSharedCanvas, coords,\n    } = this.containers.get(containerId)!;\n\n    if (isSharedCanvas) {\n      ctx.clearRect(coords!.x, coords!.y, this.imgSize, this.imgSize);\n    } else {\n      canvas.remove();\n    }\n\n    this.containers.delete(containerId);\n\n    if (!this.containers.size) {\n      this.destroy();\n    }\n  }\n\n  isPlaying() {\n    return this.isAnimating || this.isWaiting;\n  }\n\n  play(forceRestart = false, containerId?: string) {\n    if (containerId) {\n      this.containers.get(containerId)!.isPaused = false;\n    }\n\n    if (this.isEnded && forceRestart) {\n      this.approxFrameIndex = Math.floor(0);\n    }\n\n    this.stopFrameIndex = undefined;\n    this.direction = 1;\n    this.doPlay();\n  }\n\n  pause(containerId?: string) {\n    if (containerId) {\n      this.containers.get(containerId)!.isPaused = true;\n\n      const areAllContainersPaused = Array.from(this.containers.values()).every(({ isPaused }) => isPaused);\n      if (!areAllContainersPaused) {\n        return;\n      }\n    }\n\n    if (this.isWaiting) {\n      this.stopFrameIndex = this.approxFrameIndex;\n    } else {\n      this.isAnimating = false;\n    }\n\n    if (!this.params.isLowPriority) {\n      this.frames = this.frames.map((frame, i) => {\n        if (i === this.prevFrameIndex) {\n          return frame;\n        } else {\n          if (frame && frame !== WAITING) {\n            frame.close();\n          }\n\n          return undefined;\n        }\n      });\n    }\n  }\n\n  playSegment([startFrameIndex, stopFrameIndex]: [number, number]) {\n    this.approxFrameIndex = Math.floor(startFrameIndex / this.reduceFactor);\n    this.stopFrameIndex = Math.floor(stopFrameIndex / this.reduceFactor);\n    this.direction = startFrameIndex < stopFrameIndex ? 1 : -1;\n    this.doPlay();\n  }\n\n  setSpeed(speed: number) {\n    this.speed = speed;\n  }\n\n  setNoLoop(noLoop?: boolean) {\n    this.params.noLoop = noLoop;\n  }\n\n  setSharedCanvasCoords(containerId: string, newCoords: Params['coords']) {\n    const containerInfo = this.containers.get(containerId)!;\n    const {\n      canvas, ctx,\n    } = containerInfo;\n\n    if (!canvas.dataset.isJustCleaned || canvas.dataset.isJustCleaned === 'false') {\n      const sizeFactor = this.calcSizeFactor();\n      ensureCanvasSize(canvas, sizeFactor);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      canvas.dataset.isJustCleaned = 'true';\n      fastRaf(() => {\n        canvas.dataset.isJustCleaned = 'false';\n      });\n    }\n\n    containerInfo.coords = {\n      x: Math.round((newCoords?.x || 0) * canvas.width),\n      y: Math.round((newCoords?.y || 0) * canvas.height),\n    };\n\n    const frame = this.getFrame(this.prevFrameIndex) || this.getFrame(Math.round(this.approxFrameIndex));\n\n    if (frame && frame !== WAITING) {\n      ctx.drawImage(frame, containerInfo.coords.x, containerInfo.coords.y);\n    }\n  }\n\n  private addContainer(\n    containerId: string,\n    container: HTMLDivElement | HTMLCanvasElement,\n    onLoad?: NoneToVoidFunction,\n    coords?: Params['coords'],\n  ) {\n    const sizeFactor = this.calcSizeFactor();\n\n    let imgSize: number;\n\n    if (container instanceof HTMLDivElement) {\n      if (!(container.parentNode instanceof HTMLElement)) {\n        throw new Error('[RLottie] Container is not mounted');\n      }\n\n      let { size } = this.params;\n\n      if (!size) {\n        size = (\n          container.offsetWidth\n          || parseInt(container.style.width, 10)\n          || container.parentNode.offsetWidth\n        );\n\n        if (!size) {\n          throw new Error('[RLottie] Failed to detect width from container');\n        }\n      }\n\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d')!;\n\n      canvas.style.width = `${size}px`;\n      canvas.style.height = `${size}px`;\n\n      imgSize = Math.round(size * sizeFactor);\n\n      canvas.width = imgSize;\n      canvas.height = imgSize;\n\n      container.appendChild(canvas);\n\n      this.containers.set(containerId, {\n        canvas, ctx, onLoad,\n      });\n    } else {\n      if (!container.isConnected) {\n        throw new Error('[RLottie] Shared canvas is not mounted');\n      }\n\n      const canvas = container;\n      const ctx = canvas.getContext('2d')!;\n\n      ensureCanvasSize(canvas, sizeFactor);\n\n      imgSize = Math.round(this.params.size! * sizeFactor);\n\n      this.containers.set(containerId, {\n        canvas,\n        ctx,\n        isSharedCanvas: true,\n        coords: {\n          x: Math.round((coords?.x || 0) * canvas.width),\n          y: Math.round((coords?.y || 0) * canvas.height),\n        },\n        onLoad,\n      });\n    }\n\n    if (!this.imgSize) {\n      this.imgSize = imgSize;\n      this.imageData = new ImageData(imgSize, imgSize);\n    }\n\n    if (this.isRendererInited) {\n      this.doPlay();\n    }\n  }\n\n  private calcSizeFactor() {\n    const {\n      isLowPriority,\n      size,\n      // Reduced quality only looks acceptable on big enough images\n      quality = isLowPriority && (!size || size > LOW_PRIORITY_QUALITY_SIZE_THRESHOLD)\n        ? LOW_PRIORITY_QUALITY : HIGH_PRIORITY_QUALITY,\n    } = this.params;\n\n    // Reduced quality only looks acceptable on high DPR screens\n    return Math.max(DPR * quality, 1);\n  }\n\n  private destroy() {\n    this.isDestroyed = true;\n    this.pause();\n    this.clearCache();\n    this.destroyRenderer();\n\n    instancesById.delete(this.id);\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      if (frame && frame !== WAITING) {\n        frame.close();\n      }\n    });\n\n    // Help GC\n    this.imageData = undefined as any;\n    this.frames = [];\n  }\n\n  private initConfig() {\n    const { isLowPriority } = this.params;\n\n    this.cacheModulo = isLowPriority ? LOW_PRIORITY_CACHE_MODULO : HIGH_PRIORITY_CACHE_MODULO;\n  }\n\n  setColor(newColor: [number, number, number] | undefined) {\n    this.customColor = newColor;\n  }\n\n  private initRenderer() {\n    this.workerIndex = cycleRestrict(MAX_WORKERS, ++lastWorkerIndex);\n\n    workers[this.workerIndex].request({\n      name: 'init',\n      args: [\n        this.id,\n        this.tgsUrl,\n        this.imgSize,\n        this.params.isLowPriority || false,\n        this.customColor,\n        this.onRendererInit.bind(this),\n      ],\n    });\n  }\n\n  private destroyRenderer() {\n    workers[this.workerIndex].request({\n      name: 'destroy',\n      args: [this.id],\n    });\n  }\n\n  private onRendererInit(reduceFactor: number, msPerFrame: number, framesCount: number) {\n    this.isRendererInited = true;\n    this.reduceFactor = reduceFactor;\n    this.msPerFrame = msPerFrame;\n    this.framesCount = framesCount;\n\n    if (this.isWaiting) {\n      this.doPlay();\n    }\n  }\n\n  changeData(tgsUrl: string) {\n    this.pause();\n    this.tgsUrl = tgsUrl;\n    this.initConfig();\n\n    workers[this.workerIndex].request({\n      name: 'changeData',\n      args: [\n        this.id,\n        this.tgsUrl,\n        this.params.isLowPriority || false,\n        this.onChangeData.bind(this),\n      ],\n    });\n  }\n\n  private onChangeData(reduceFactor: number, msPerFrame: number, framesCount: number) {\n    this.reduceFactor = reduceFactor;\n    this.msPerFrame = msPerFrame;\n    this.framesCount = framesCount;\n    this.isWaiting = false;\n    this.isAnimating = false;\n\n    this.doPlay();\n  }\n\n  private doPlay() {\n    if (!this.framesCount) {\n      return;\n    }\n\n    if (this.isDestroyed) {\n      return;\n    }\n\n    if (this.isAnimating) {\n      return;\n    }\n\n    if (!this.isWaiting) {\n      this.lastRenderAt = undefined;\n    }\n\n    this.isEnded = false;\n    this.isAnimating = true;\n    this.isWaiting = false;\n\n    animate(() => {\n      if (this.isDestroyed) {\n        return false;\n      }\n\n      // Paused from outside\n      if (!this.isAnimating) {\n        const areAllLoaded = Array.from(this.containers.values()).every(({ isLoaded }) => isLoaded);\n        if (areAllLoaded) {\n          return false;\n        }\n      }\n\n      const frameIndex = Math.round(this.approxFrameIndex);\n      const frame = this.getFrame(frameIndex);\n      if (!frame || frame === WAITING) {\n        if (!frame) {\n          this.requestFrame(frameIndex);\n        }\n\n        this.isAnimating = false;\n        this.isWaiting = true;\n        return false;\n      }\n\n      if (this.cacheModulo && frameIndex % this.cacheModulo === 0) {\n        this.cleanupPrevFrame(frameIndex);\n      }\n\n      if (frameIndex !== this.prevFrameIndex) {\n        this.containers.forEach((containerData) => {\n          const {\n            ctx, isLoaded, isPaused, coords: { x, y } = {}, onLoad,\n          } = containerData;\n\n          if (!isLoaded || !isPaused) {\n            ctx.clearRect(x || 0, y || 0, this.imgSize, this.imgSize);\n            ctx.drawImage(frame, x || 0, y || 0);\n          }\n\n          if (!isLoaded) {\n            containerData.isLoaded = true;\n            onLoad?.();\n          }\n        });\n\n        this.prevFrameIndex = frameIndex;\n      }\n\n      const now = Date.now();\n      const currentSpeed = this.lastRenderAt ? this.msPerFrame / (now - this.lastRenderAt) : 1;\n      const delta = Math.min(1, (this.direction * this.speed) / currentSpeed);\n      const expectedNextFrameIndex = Math.round(this.approxFrameIndex + delta);\n\n      this.lastRenderAt = now;\n\n      // Forward animation finished\n      if (delta > 0 && (frameIndex === this.framesCount! - 1 || expectedNextFrameIndex > this.framesCount! - 1)) {\n        if (this.params.noLoop) {\n          this.isAnimating = false;\n          this.isEnded = true;\n          this.onEnded?.();\n          return false;\n        }\n        this.onLoop?.();\n\n        this.approxFrameIndex = 0;\n\n        // Backward animation finished\n      } else if (delta < 0 && (frameIndex === 0 || expectedNextFrameIndex < 0)) {\n        if (this.params.noLoop) {\n          this.isAnimating = false;\n          this.isEnded = true;\n          this.onEnded?.();\n          return false;\n        }\n        this.onLoop?.();\n\n        this.approxFrameIndex = this.framesCount! - 1;\n\n        // Stop frame reached\n      } else if (\n        this.stopFrameIndex !== undefined\n        && (frameIndex === this.stopFrameIndex\n          || (\n            (delta > 0 && expectedNextFrameIndex > this.stopFrameIndex)\n            || (delta < 0 && expectedNextFrameIndex < this.stopFrameIndex)\n          ))\n      ) {\n        this.stopFrameIndex = undefined;\n        this.isAnimating = false;\n        return false;\n\n        // Preparing next frame\n      } else {\n        this.approxFrameIndex += delta;\n      }\n\n      const nextFrameIndex = Math.round(this.approxFrameIndex);\n\n      if (!this.getFrame(nextFrameIndex)) {\n        this.requestFrame(nextFrameIndex);\n        this.isWaiting = true;\n        this.isAnimating = false;\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  private getFrame(frameIndex: number) {\n    return this.frames[frameIndex];\n  }\n\n  private requestFrame(frameIndex: number) {\n    this.frames[frameIndex] = WAITING;\n\n    workers[this.workerIndex].request({\n      name: 'renderFrames',\n      args: [this.id, frameIndex, this.onFrameLoad.bind(this)],\n    });\n  }\n\n  private cleanupPrevFrame(frameIndex: number) {\n    if (this.framesCount! < 3) {\n      return;\n    }\n\n    const prevFrameIndex = cycleRestrict(this.framesCount!, frameIndex - 1);\n    this.frames[prevFrameIndex] = undefined;\n  }\n\n  private onFrameLoad(frameIndex: number, imageBitmap: ImageBitmap) {\n    if (this.frames[frameIndex] !== WAITING) {\n      return;\n    }\n\n    this.frames[frameIndex] = imageBitmap;\n\n    if (this.isWaiting) {\n      this.doPlay();\n    }\n  }\n}\n\nfunction ensureCanvasSize(canvas: HTMLCanvasElement, sizeFactor: number) {\n  const expectedWidth = Math.round(canvas.offsetWidth * sizeFactor);\n  const expectedHeight = Math.round(canvas.offsetHeight * sizeFactor);\n  if (canvas.width !== expectedWidth || canvas.height !== expectedHeight) {\n    canvas.width = expectedWidth;\n    canvas.height = expectedHeight;\n  }\n}\n\nexport default RLottie;\n","import generateIdFor from './generateIdFor';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n  acceptsBuffer?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateIdFor(requestStates);\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport { AudioOrigin, GlobalSearchContent } from '../types';\nimport type { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './environment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport type { MessageKey } from '../global/helpers';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { fastRaf } from './schedulers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset src to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // onPause not called otherwise, but required to sync UI\n        fastRaf(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './environment';\nimport { Lethargy } from './lethargy';\nimport { clamp, round } from './math';\nimport { debounce } from './schedulers';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent | WheelEvent,\n    captureEvent: MouseEvent | TouchEvent | WheelEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n    cancelDrag?: (x: boolean, y: boolean) => void,\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onZoom?: (e: TouchEvent | WheelEvent, params: {\n    // Absolute zoom level\n    zoom?: number;\n    // Relative zoom factor\n    zoomFactor?: number;\n\n    // center coordinate of the initial pinch\n    initialCenterX: number;\n    initialCenterY: number;\n\n    // offset of the pinch center (current from initial)\n    dragOffsetX: number;\n    dragOffsetY: number;\n\n    // center coordinate of the current pinch\n    currentCenterX: number;\n    currentCenterY: number;\n  }) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  onDoubleClick?: (e: MouseEvent | RealTouchEvent | WheelEvent, params: { centerX: number; centerY: number }) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withNativeDrag?: boolean;\n  maxZoom?: number;\n  minZoom?: number;\n  doubleTapZoom?: number;\n  initialZoom?: number;\n  isNotPassive?: boolean;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nexport const IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\nconst RELEASE_WHEEL_ZOOM_DELAY = 150;\nconst RELEASE_WHEEL_DRAG_DELAY = 150;\n\nfunction getDistance(a: Touch, b?: Touch) {\n  if (!b) return 0;\n  return Math.hypot((b.pageX - a.pageX), (b.pageY - a.pageY));\n}\n\nfunction getTouchCenter(a: Touch, b: Touch) {\n  return {\n    x: (a.pageX + b.pageX) / 2,\n    y: (a.pageY + b.pageY) / 2,\n  };\n}\n\nlet lastClickTime = 0;\nconst lethargy = new Lethargy({\n  stability: 5,\n  sensitivity: 25,\n  tolerance: 0.6,\n  delay: 150,\n});\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | WheelEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let isZooming = false;\n  let initialDistance = 0;\n  let wheelZoom = options.initialZoom ?? 1;\n  let initialDragOffset = {\n    x: 0,\n    y: 0,\n  };\n  let isDragCanceled = {\n    x: false,\n    y: false,\n  };\n  let initialTouchCenter = {\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2,\n  };\n  let initialSwipeAxis: TSwipeAxis | undefined;\n  const minZoom = options.minZoom ?? 1;\n  const maxZoom = options.maxZoom ?? 4;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      if (!options.withNativeDrag && options.onDrag) {\n        e.preventDefault();\n      }\n\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (e.touches.length === 2) {\n          initialDistance = getDistance(e.touches[0], e.touches[1]);\n          initialTouchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n        }\n      }\n    }\n\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e?: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = '';\n          });\n      }\n\n      if (e) {\n        if (hasMoved) {\n          if (options.onRelease) {\n            options.onRelease(e);\n          }\n        } else if (e.type === 'mouseup') {\n          if (options.onDoubleClick && Date.now() - lastClickTime < 300) {\n            options.onDoubleClick(e, {\n              centerX: captureEvent!.pageX!,\n              centerY: captureEvent!.pageY!,\n            });\n          } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n            options.onClick(e);\n          }\n          lastClickTime = Date.now();\n        }\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    isZooming = false;\n    initialDistance = 0;\n    wheelZoom = clamp(wheelZoom, minZoom, maxZoom);\n    initialSwipeAxis = undefined;\n    initialDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    isDragCanceled = {\n      x: false,\n      y: false,\n    };\n    initialTouchCenter = {\n      x: window.innerWidth / 2,\n      y: window.innerHeight / 2,\n    };\n    captureEvent = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (options.onZoom && initialDistance > 0 && e.touches.length === 2) {\n          const endDistance = getDistance(e.touches[0], e.touches[1]);\n          const touchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n          const dragOffsetX = touchCenter.x - initialTouchCenter.x;\n          const dragOffsetY = touchCenter.y - initialTouchCenter.y;\n          const zoomFactor = endDistance / initialDistance;\n          options.onZoom(e, {\n            zoomFactor,\n            initialCenterX: initialTouchCenter.x,\n            initialCenterY: initialTouchCenter.y,\n            dragOffsetX,\n            dragOffsetY,\n            currentCenterX: touchCenter.x,\n            currentCenterY: touchCenter.y,\n          });\n          if (zoomFactor !== 1) hasMoved = true;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, {\n          dragOffsetX,\n          dragOffsetY,\n        });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = 'hidden';\n          });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= window.innerWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  const releaseWheelDrag = debounce(onRelease, RELEASE_WHEEL_DRAG_DELAY, false);\n  const releaseWheelZoom = debounce(onRelease, RELEASE_WHEEL_ZOOM_DELAY, false);\n\n  function onWheelCapture(e: WheelEvent) {\n    if (hasMoved) return;\n    onCapture(e);\n    hasMoved = true;\n    initialTouchCenter = { x: e.x, y: e.y };\n  }\n\n  function onWheelZoom(e: WheelEvent) {\n    if (!options.onZoom) return;\n    onWheelCapture(e);\n    const dragOffsetX = e.x - initialTouchCenter.x;\n    const dragOffsetY = e.y - initialTouchCenter.y;\n    const delta = clamp(e.deltaY, -25, 25);\n    wheelZoom -= delta * 0.01;\n    wheelZoom = clamp(wheelZoom, minZoom * 0.5, maxZoom * 3);\n    options.onZoom(e, {\n      zoom: round(wheelZoom, 2),\n      initialCenterX: initialTouchCenter.x,\n      initialCenterY: initialTouchCenter.y,\n      dragOffsetX,\n      dragOffsetY,\n      currentCenterX: e.x,\n      currentCenterY: e.y,\n    });\n    releaseWheelZoom(e);\n  }\n\n  function onWheelDrag(e: WheelEvent) {\n    if (!options.onDrag) return;\n    onWheelCapture(e);\n    // Ignore wheel inertia if drag is canceled in this direction\n    if (!isDragCanceled.x || Math.sign(initialDragOffset.x) === Math.sign(e.deltaX)) {\n      initialDragOffset.x -= e.deltaX;\n    }\n    if (!isDragCanceled.y || Math.sign(initialDragOffset.y) === Math.sign(e.deltaY)) {\n      initialDragOffset.y -= e.deltaY;\n    }\n    const { x, y } = initialDragOffset;\n    options.onDrag(e, captureEvent!, {\n      dragOffsetX: x,\n      dragOffsetY: y,\n    }, (dx, dy) => {\n      isDragCanceled = { x: dx, y: dy };\n    });\n    releaseWheelDrag(e);\n  }\n\n  function onWheel(e: WheelEvent) {\n    if (!options.onZoom && !options.onDrag) return;\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const { doubleTapZoom = 3 } = options;\n    if (options.onDoubleClick && Object.is(e.deltaX, -0) && Object.is(e.deltaY, -0) && e.ctrlKey) {\n      onWheelCapture(e);\n      wheelZoom = wheelZoom > 1 ? 1 : doubleTapZoom;\n      options.onDoubleClick(e, { centerX: e.pageX, centerY: e.pageY });\n      hasMoved = false;\n      return;\n    }\n    const metaKeyPressed = e.metaKey || e.ctrlKey || e.shiftKey;\n    if (metaKeyPressed) {\n      onWheelZoom(e);\n    }\n    if (!metaKeyPressed && !isZooming) {\n      // Check if this event produced by user scroll and not by inertia\n      const isUserEvent = lethargy.check(e);\n      if (wheelZoom !== 1) {\n        onWheelDrag(e);\n      } else if (isUserEvent) {\n        onWheelDrag(e);\n      }\n    }\n  }\n\n  element.addEventListener('wheel', onWheel);\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: !options.isNotPassive });\n\n  return () => {\n    onRelease();\n    element.removeEventListener('wheel', onWheel);\n    element.removeEventListener('touchstart', onCapture);\n    element.removeEventListener('mousedown', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","/**\n * Lethargy help distinguish between scroll events initiated by the user, and those by inertial scrolling.\n * Lethargy does not have external dependencies.\n *\n * @param stability - Specifies the length of the rolling average.\n * In effect, the larger the value, the smoother the curve will be.\n * This attempts to prevent anomalies from firing 'real' events. Valid values are all positive integers,\n * but in most cases, you would need to stay between 5 and around 30.\n *\n * @param sensitivity - Specifies the minimum value for wheelDelta for it to register as a valid scroll event.\n * Because the tail of the curve have low wheelDelta values,\n * this will stop them from registering as valid scroll events.\n * The unofficial standard wheelDelta is 120, so valid values are positive integers below 120.\n *\n * @param tolerance - Prevent small fluctuations from affecting results.\n * Valid values are decimals from 0, but should ideally be between 0.05 and 0.3.\n *\n * Based on https://github.com/d4nyll/lethargy\n */\n\nexport type LethargyConfig = {\n  stability?: number;\n  sensitivity?: number;\n  tolerance?: number;\n  delay?: number;\n};\n\nexport class Lethargy {\n  stability: number;\n\n  sensitivity: number;\n\n  tolerance: number;\n\n  delay: number;\n\n  lastUpDeltas: Array<number>;\n\n  lastDownDeltas: Array<number>;\n\n  deltasTimestamp: Array<number>;\n\n  constructor({\n    stability = 8,\n    sensitivity = 100,\n    tolerance = 1.1,\n    delay = 150,\n  }: LethargyConfig = {}) {\n    this.stability = stability;\n    this.sensitivity = sensitivity;\n    this.tolerance = tolerance;\n    this.delay = delay;\n    this.lastUpDeltas = new Array(this.stability * 2).fill(0);\n    this.lastDownDeltas = new Array(this.stability * 2).fill(0);\n    this.deltasTimestamp = new Array(this.stability * 2).fill(0);\n  }\n\n  check(e: any) {\n    let lastDelta;\n    e = e.originalEvent || e;\n    if (e.wheelDelta !== undefined) {\n      lastDelta = e.wheelDelta;\n    } else if (e.deltaY !== undefined) {\n      lastDelta = e.deltaY * -40;\n    } else if (e.detail !== undefined || e.detail === 0) {\n      lastDelta = e.detail * -40;\n    }\n    this.deltasTimestamp.push(Date.now());\n    this.deltasTimestamp.shift();\n    if (lastDelta > 0) {\n      this.lastUpDeltas.push(lastDelta);\n      this.lastUpDeltas.shift();\n      return this.isInertia(1);\n    } else {\n      this.lastDownDeltas.push(lastDelta);\n      this.lastDownDeltas.shift();\n      return this.isInertia(-1);\n    }\n  }\n\n  isInertia(direction: number) {\n    const lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n    if (lastDeltas[0] === undefined) return direction;\n    if (\n      this.deltasTimestamp[this.stability * 2 - 2] + this.delay > Date.now()\n      && lastDeltas[0] === lastDeltas[this.stability * 2 - 1]\n    ) {\n      return false;\n    }\n    const lastDeltasOld = lastDeltas.slice(0, this.stability);\n    const lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n    const oldSum = lastDeltasOld.reduce((t, s) => t + s);\n    const newSum = lastDeltasNew.reduce((t, s) => t + s);\n    const oldAverage = oldSum / lastDeltasOld.length;\n    const newAverage = newSum / lastDeltasNew.length;\n    return Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance)\n      && this.sensitivity < Math.abs(newAverage);\n  }\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  ANIMATION_LEVEL_MIN,\n  FAST_SMOOTH_MAX_DISTANCE, FAST_SMOOTH_MAX_DURATION, FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { IS_ANDROID } from './environment';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle } from './animation';\nimport { fastRaf } from './schedulers';\n\nlet isAnimating = false;\n\nexport default function fastSmoothScroll(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const scrollFrom = calculateScrollFrom(container, element, maxDistance, forceDirection);\n\n  if (forceDirection === FocusDirection.Static) {\n    scrollWithJs(container, element, scrollFrom, position, margin, 0);\n    return;\n  }\n\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    forceDuration = 0;\n  }\n\n  scrollWithJs(container, element, scrollFrom, position, margin, forceDuration, forceNormalContainerHeight);\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  element: HTMLElement,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { offsetTop: elementTop } = element;\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = elementTop - container.scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return elementTop + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, elementTop - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction scrollWithJs(\n  container: HTMLElement,\n  element: HTMLElement,\n  scrollFrom: number,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  if (currentScrollTop !== scrollFrom) {\n    container.scrollTop = scrollFrom;\n  }\n\n  let path!: number;\n\n  switch (position) {\n    case 'start':\n      path = (elementTop - margin) - scrollFrom + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      path = (elementTop + elementHeight + margin) - (scrollFrom + targetContainerHeight);\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      path = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2) - (scrollFrom + targetContainerHeight / 2)\n        : (elementTop - margin) - scrollFrom;\n      break;\n  }\n\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollFrom + path;\n\n  if (forceDuration === 0) {\n    container.scrollTop = target;\n    return;\n  }\n\n  isAnimating = true;\n\n  const absPath = Math.abs(path);\n  const transition = absPath < FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n  const duration = forceDuration || (\n    FAST_SMOOTH_MIN_DURATION\n    + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n  );\n  const startAt = Date.now();\n  const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n  fastRaf(() => {\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n\n      container.scrollTop = Math.round(target - currentPath);\n\n      isAnimating = t < 1;\n\n      if (!isAnimating) {\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    });\n  });\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 5);\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { ANIMATION_LEVEL_MIN } from '../config';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function fastSmoothScrollHorizontal(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    duration = 0;\n  }\n\n  return scrollWithJs(container, left, duration);\n}\n\nfunction scrollWithJs(container: HTMLElement, left: number, duration: number) {\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  if (duration === 0) {\n    container.scrollLeft = target;\n    return Promise.resolve();\n  }\n\n  let isStopped = false;\n  const id = Math.random().toString();\n  container.dataset.scrollId = id;\n  stopById.set(id, () => {\n    isStopped = true;\n  });\n\n  container.style.scrollSnapType = 'none';\n\n  let resolve: VoidFunction;\n  const promise = new Promise<void>((r) => {\n    resolve = r;\n  });\n  const startAt = Date.now();\n\n  animate(() => {\n    if (isStopped) return false;\n\n    const t = Math.min((Date.now() - startAt) / duration, 1);\n\n    const currentPath = path * (1 - transition(t));\n    container.scrollLeft = Math.round(target - currentPath);\n\n    if (t >= 1) {\n      container.style.scrollSnapType = '';\n      delete container.dataset.scrollId;\n      stopById.delete(id);\n      resolve();\n    }\n    return t < 1;\n  });\n\n  return promise;\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { IS_TOUCH_ENV } from './environment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n","import type React from '../lib/teact/teact';\n\nconst stopEvent = (e: React.UIEvent | Event | React.FormEvent) => {\n  e.stopPropagation();\n  e.preventDefault();\n};\n\nexport default stopEvent;\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","export const TEXT_AI_THINKING = \"...\"\nexport const BYPASS_API = [\n  \"sendMessage\",\"editMessage\",\"deleteMessages\",\"downloadMedia\",\n  \"uploadProfilePhoto\"\n]\nexport const BOTTOM_INPUT_LEFT_MARGIN = 'width:4px;'\n\n"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","activeGroupCallId","selectTabState","isMasterTab","groupCalls","undefined","usersById","users","byId","chatsById","chats","isActive","participantsCount","isLoaded","isCallNotEmpty","isCallActive","id","animationLevel","settings","byKey","GroupCallTopPane","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","Object","values","filter","_","i","map","isUser","user","Boolean","useEffect","subscribed","React","buildClassName","onClick","p","Avatar","key","Button","round","AnimatedCounter","text","prevText","usePrevious","forceUpdate","useForceUpdate","isAnimatingRef","useRef","shouldAnimate","getGlobal","ANIMATION_LEVEL_MAX","textElement","elements","length","push","current","useTimeout","dir","isRtl","props","sticker","noLoad","forcePreview","lastSyncTime","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isPreviewLoaded","markPreviewLoaded","useFlag","has","transitionClassNames","useMediaTransition","isAnimationReady","markAnimationReady","handlePreviewLoad","add","size","styles","style","buildStyle","src","onLoad","AnimatedIcon","noTransition","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","_data","_data$idx","_data2","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRender","shouldRenderSpinner","spinnerClassNames","useShowTransition","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","captureEvents","onCapture","onRelease","onDrag","transcribeSvgMemo","dangerouslySetInnerHTML","__html","renderFirstLine","title","fileName","fullClassName","AudioOrigin","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","formatMediaDateTime","renderAudio","svgMemo","onClickTranscribe","draggable","renderVoice","runDebounced","debounce","cb","chatOrUserId","countryList","phoneCodes","phoneCodeList","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","ChatExtra","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","userId","fullInfo","usernames","phoneNumber","isSelf","chatUsernames","areNotificationsEnabled","setAreNotificationsEnabled","isTopicInfo","MAIN_THREAD_ID","activeUsernames","u","activeChatUsernames","link","getTopicLink","username","getChatLink","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","description","bio","getChatDescription","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","nick","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","isPrivateChat","isChatWithSelf","selectIsChatWithSelf","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isChannel","isBasicGroup","isChatBasicGroup","isSuperGroup","isChatSuperGroup","currentUserId","DeleteChatModal","isOpen","onClose","onCloseAnimationEnd","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockContact","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","contactId","accessHash","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isSavedMessages","withVideo","isText","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","sender","onMediaClick","dispatch","document","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","SUPPORTED_VIDEO_CONTENT_TYPES","mimeType","SUPPORTED_IMAGE_CONTENT_TYPES","handleClick","File","name","thumbnailDataUri","actionIcon","isMessageDocumentVideo","DotAnimation","FakeIcon","fakeType","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","shouldSpinnerRender","getColorFromExtension","sizeString","getDocumentThumbnailDimensions","alt","VERIFIED_ICON","VerifiedIcon","FullNameTitle","peer","noVerified","noFake","withEmojiStatus","emojiStatusSize","noLoopLimit","onEmojiStatusClick","getUserFullName","emojiStatus","isPremium","isVerified","CustomEmoji","documentId","loopLimit","EMOJI_STATUS_LOOP_LIMIT","observeIntersectionForLoading","PremiumIcon","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","GroupChatInfo","typingStatus","avatarSize","noAvatar","status","withDots","withUsername","withFullInfo","withUpdatingStatus","withChatType","withVideoAvatar","noRtl","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","getMainUsername","TopicIcon","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","MessageOutgoingStatus","Media","idPrefix","isProtected","mediaBlobUrl","getMessageVideo","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","onContextMenu","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","top","shiftX","shiftY","setAttribute","Keys","Transition","activeKey","NothingFound","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","password","setPassword","TEST_PWD","canSubmit","setCanSubmit","focusDelayTimeoutMs","IS_TOUCH_ENV","focus","requestAnimationFrame","select","action","event","preventDefault","autoComplete","type","tabIndex","onKeyDown","code","multiple","onChange","target","MIN_PASSWORD_LENGTH","maxLength","role","disabled","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","PasswordMonkey","isBig","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","AnimatedSticker","STICKER_SIZE_TWO_FA","LOCAL_TGS_URLS","playSegment","noLoop","Picker","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","onSelectedIdsChange","onFilterChange","onLoadMore","shouldMinimize","setTimeout","handleItemClick","newSelectedIds","includes","splice","indexOf","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","canClose","clickArg","InputText","InfiniteScroll","items","Checkbox","label","checked","PrivateChatInfo","Loading","iconElement","titleText","PREMIUM_ICON","store","withGradient","big","html","generateIdFor","getPremiumIconGradient","userStatus","selectUserStatus","noStatusOrTyping","adminMember","customTitle","isOwner","isUserOnline","getUserStatus","ProfilePhoto","photo","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","userOrChat","currentPhoto","personalPhoto","profilePhoto","fallbackPhoto","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getFirstLetters","Spinner","getUserColorKey","connectionState","mediaViewer","currentTopicId","ProfileInfo","openPremiumModal","photos","MEMO_EMPTY_ARRAY","prevMediaId","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","profile","currentIndex","slice","mediaLoader","usePhotosPreload","handleProfilePhotoClick","handleClickPremium","fromUserId","selectPreviousMedia","selectNextMedia","_membersCount","_membersCount2","element","querySelector","selectorToPreventScroll","onSwipe","direction","SwipeDirection","letterClassName","renderPhotoTabs","renderPhoto","ReactionStaticEmoji","reaction","availableReactions","isCustom","availableReaction","find","available","isSameReaction","staticIconId","staticIcon","observeIntersectionForPlaying","blankUrl","ReportModal","subject","messageIds","reportMessages","reportPeer","reportProfilePhoto","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","contentForStatusMenuContext","arg","StickerButton","noAnimate","noContextMenu","isStatusPicker","canViewSet","isCurrentUserPremium","noShowPremium","sharedCanvasRef","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","openStickerSet","setEmojiStatus","menuRef","hasCustomColor","shouldUseTextColor","rgbColor","customColor","useDynamicColorListener","isCustomEmoji","hasEffect","stickerSetInfo","isLocked","shouldPlay","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","closest","getMenuElement","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useContextMenuPosition","getLayout","withPortal","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","expires","Date","now","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","MenuItem","emoji","onMouseDown","preventMessageInputBlurWithBubbling","initialSection","StickerView","containerRef","isSmall","shouldLoop","shouldPreloadPreview","noPlay","withSharedAnimation","Menu","autoClose","iconEmojiId","TopicDefaultIcon","iconColor","typingUser","typingUserName","replace","trim","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","url","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","handleMessageClick","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","renderMessageText","highlight","emojiSize","isSimple","truncateLength","shouldRenderAsHtml","entities","contentNotSupportedText","renderTextWithEntities","noEmoji","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","some","ApiMessageEntityTypes","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","ChatFolderModal","useModuleLoader","Bundles","Badge","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","acc","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isShown","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","renderContent","ChatCallStatus","isForumPanelActive","selectIsForumPanelOpen","AvatarBadge","senderId","replyToMessageId","isOutgoing","lastMessage","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","selectChatMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","messageListType","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","draft","selectDraft","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","Chat","folderId","orderDiff","animationType","offsetTop","onDragEnter","openChat","focusLastMessage","loadTopics","openForumPanel","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","forceOnHeavyAnimation","shouldReplaceHistory","handleDragEnter","handleDelete","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","IS_MULTITAB_SUPPORTED","createLocationHash","withPortalForMenu","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","payload","SettingsScreens","AnimatedIconFromSticker","fluid","pill","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","buttonClassName","RESERVED_HOTKEYS","ChatList","isForumPanelOpen","canDisplayArchive","onLeftColumnContentChange","openNextChat","closeForumPanel","shouldIgnoreDragRef","resolvedFolderId","ALL_FOLDER_ID","shouldDisplayArchive","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useChatOrderDiff","CHAT_LIST_SLICE","useHotkeys","targetIndexDelta","IS_PWA","addEventListener","handleKeyDown","removeEventListener","IS_MAC_OS","metaKey","ctrlKey","startsWith","digit","match","isArchiveInList","shift","position","Number","LeftColumnContent","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","itemSelector","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","Topic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","newTabActionSeparator","isSeparator","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","destructive","useTopicContextActions","ConfirmDialog","confirmIsDestructive","confirmHandler","confirmLabel","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","ownProps","detachWhenChanged","ForumPanel","onTopicSearch","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","captureEscKeyListener","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","withForumActions","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","beforeChildren","renderTopics","GENERAL_TOPIC_ID","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","None","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","noForumTopicPanel","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","isActionMessage","useEnsureMessage","mediaThumbnail","getMessageSticker","isRoundVideo","getMessageRoundVideo","actionTargetUsers","renderLastMessageOrTyping","renderActionMessageText","isEmbedded","senderName","getMessageSenderName","blobUrl","messageSummary","MessageSummary","isSpoiler","renderSummary","opacity","fastRaf","classList","remove","ANIMATION_END_DELAY","orderById","reduce","prevOrderById","mapValues","order","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","getSenderName","getSenderTitle","isChatGroup","HeaderMenuContainer","selectIsInSelectMode","noMenu","bot","selectChatBot","isMainThread","isDiscussionThread","isRightColumnShown","selectIsRightColumnShown","canRestartBot","selectIsUserBlocked","canStartBot","selectIsChatBotNotStarted","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","adminRights","manageCall","canViewStatistics","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","ANIMATION_LEVEL_MIN","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","menuButtonRef","isMenuOpen","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuClose","right","bottom","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","Account","getSession","getUid","command","updateGlobal","authState","handleRestartBot","handleJoinRequestsClick","screen","ManagementScreens","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","anchor","withExtraActions","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CustomEmojiTooltip","DropTarget","isQuick","isGeneric","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","DropAreaState","DropArea","withQuick","onHide","hideTimeoutRef","prevWithQuick","handleFilesDrop","async","dataTransfer","dt","files","folderFiles","getFilesFromDataTransferItems","concat","from","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerId","onDragOver","handleDragOver","clearTimeout","EmojiTooltip","AbsoluteVideo","constructor","videoUrl","container","_defineProperty","this","createElement","load","appendChild","recalculatePositionAndSize","play","paused","safePlay","pause","destroy","updatePosition","SIZE","THROTTLE_MS","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","replyingToId","selectReplyingToId","isSelectModeActive","MessageInput","captionLimit","isAttachmentModalInput","editableInputId","getHtml","forcedPlaceholder","canSendPlainText","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","onScroll","editLastMessage","replyToNextMessage","showAllowedMessageTypesNotification","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","prefixId","textColor","mapRef","Map","removeContainers","ids","player","get","delete","synchronizeElements","removedContainers","keys","querySelectorAll","dataset","uniqueId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","customEmojis","isHq","selectIsAlwaysHighPriorityEmoji","animation","isLottie","lottie","RLottie","coords","isLowPriority","removeContainer","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","set","addCustomEmojiInputRenderCallback","removeCustomEmojiInputRenderCallback","useEffectWithPrevDeps","prevTextColor","throttledSynchronizeElements","useThrottledCallback","useResizeObserver","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useBackgroundMode","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","scroller","clone","currentHeight","newHeight","scrollHeight","transitionDuration","log","exec","toggle","htmlRef","innerHTML","focusInput","isHeavyAnimating","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","IS_IOS","rangeCount","IS_ANDROID","selectionRange","getRangeAt","selectedText","toString","isSelectionInsideInput","EDITABLE_INPUT_ID","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","input","isSelectionCollapsed","isCollapsed","tagName","isContentEditable","newEvent","KeyboardEvent","dispatchEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","blur","isTouched","useDerivedState","contentEditable","textContent","IS_EMOJI_SUPPORTED","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextFormatter","anchorPosition","SymbolMenu","SymbolMenuButton","canSendGifs","canSendStickers","isReady","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","onCustomEmojiSelect","onStickerSelect","onGifSelect","isAttachmentModal","onRemoveSymbol","onEmojiSelect","closeBotCommandMenu","closeSendAsMenu","isSymbolMenuForced","setStickerSearchQuery","setGifSearchQuery","addRecentEmoji","addRecentCustomEmoji","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","handleSearchOpen","triggerEl","query","messageInput","EDITABLE_INPUT_MODAL_CSS_SELECTOR","EDITABLE_INPUT_CSS_SELECTOR","activeElement","BOTTOM_INPUT_LEFT_MARGIN","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","el","replaceWith","getAttribute","getSelectedElement","updateInputStyles","scrollWidth","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","entityType","execCommand","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","b","m","toLowerCase","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","entry","Promise","resolve","isFile","itemFile","getAsFile","file","isDirectory","createReader","readEntries","entries","entriesPromises","all","kind","webkitGetAsEntry","validateFiles","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","MAX_NESTING_PARENTS","inputId","parentNode","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isEnabled","setHtml","getSelectionRange","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","extractLastEmojiThrottled","useThrottledResolver","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","useDerivedSignal","hasCustomEmojis","lastEmoji","insertCustomEmoji","inputEl","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","substring","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","memoized","recentEmojiIds","limit","pickTruthy","prepareLibraryMemo","baseEmojiKeywords","emojiKeywords","emojis","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","keywords","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","sort","flat","matchedNames","unique","useEmojiTooltip","setById","filteredEmojis","setFilteredEmojis","filteredCustomEmojis","setFilteredCustomEmojis","default","uncompressEmoji","ensureEmojiData","then","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","insertEmoji","isForce","atIndex","lastIndexOf","emojiHtml","getElementById","emojiCode","newShouldAutoInsert","endsWith","test","isEmojiTooltipOpen","closeEmojiTooltip","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","filteredUsers","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","insertMention","forceFocus","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","substr","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","photosMap","Photo","isInSelectMode","dimensions","asForwarded","nonInteractive","shouldAffectAppendix","decryptUrl","setDecryptUrl","getMessagePhoto","getMessageWebPagePhoto","useBlurredMediaThumbRef","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","fetchBlob","buf","blobToBuffer","bb","wrapByteBuffer","encryptTypeLne","readInt16","readBytes","typeLen","hintLen","getPasswordFromEvent","body","subarray","decryptData","decryptByPrvKey","hashSha256","uri","blobToDataUri","Blob","isAllowed","useLayoutEffectWithPrevDeps","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","removeAttribute","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","setProperty","calculateMediaDimensions","dimensionsStyle","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","inSelectMode","img","Image","crossOrigin","onload","drawImage","getImageData","getAppendixColorFromImage","MIN_MEDIA_WIDTH","MIN_MEDIA_WIDTH_WITH_COMMENTS","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH_WITH_TEXT_AND_COMMENTS","MIN_MEDIA_HEIGHT","SMALL_IMAGE_THRESHOLD","getMinMediaWidth","hasText","hasCommentButton","isWebPagePhoto","isWebPageVideo","getMessageWebPageVideo","calculateInlineImageDimensions","calculateVideoDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","isDisabled","useAsyncRendering","dependencies","delay","timeoutRef","useSyncEffect","CheckboxGroup","loadingOptions","setValues","handleChange","newValues","v","option","subLabel","cropperResultOptions","quality","format","circle","Croppie","croppiePromise","cropper","CropModal","isCroppieReady","setIsCroppieReady","imgFile","cropContainer","offsetHeight","enableZoom","boundary","viewport","bind","err","DEBUG","console","initCropper","ensureCroppie","handleCropClick","croppedImg","blobToFile","hasCloseButton","FloatingActionButton","children","buttonRef","leftElement","secondaryIcon","rightElement","allowDisabledClick","inactive","onSecondaryIconClick","markIsTouched","unmarkIsTouched","handleClickEvent","MouseButton","handleSecondaryIconClick","handleMouseDown","ButtonElementTag","RippleEffect","MenuSeparator","Notification","onDismiss","actionText","actions","setIsOpen","timerRef","closeAndDismiss","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","RADIUSES","xl","square","circleRadius","STROKE_WIDTH","borderRadius","circumference","PI","svg","firstElementChild","strokeDashOffset","Radio","hidden","loadingOption","RangeSlider","step","renderValue","mainClassName","trackWidth","index","SearchInput","parentContainerClassName","focused","spinnerColor","spinnerBackgroundColor","autoFocusSearch","onReset","onFocus","onBlur","onSpinnerClick","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","backgroundColor","noCloseTransition","shouldAnimateFirstRender","prevIsOpen","prevChildren","fromChildrenRef","isFirstRender","Skeleton","variant","forceAspectRatio","inline","classNames","Switcher","onCheck","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","useFoldersReducer","useReducer","resolver","deps","ms","noFirst","setValue","useDebouncedResolver","noLast","trackId","originalDuration","trackType","handlers","metadata","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","setPlayProgress","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","stop","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","volume","isFinite","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","SERVICE_NOTIFICATIONS_USER_ID","stopImmediatePropagation","isMenuDisabled","shouldDisableOnLink","shouldDisableOnLongTap","setIsContextMenuOpen","timer","clearLongPressTimer","startLongPressTimer","originalEvent","touches","capture","emulateContextMenuEvent","passive","MENU_POSITION_VISUAL_COMFORT_SPACE_PX","MENU_POSITION_BOTTOM_MARGIN","EMPTY_RECT","setPositionX","setPositionY","setTransformOriginX","setTransformOriginY","withScroll","setWithScroll","setStyle","setMenuStyle","anchorX","anchorY","menuEl","rootEl","extraPaddingX","extraTopPadding","marginSides","extraMarginTop","marginTop","parseInt","getComputedStyle","menuRect","rootRect","horizontalPosition","verticalPosition","triggerRect","addedYForPortalPositioning","addedXForPortalPositioning","leftWithPossibleNegative","menuMaxHeight","offsetX","offsetY","resolverOrDependency","isAsync","_dependencies","getValue","useSignal","resolverRef","useStateRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","newValue","replyOriginForId","loadMessage","loadMessageThrottled","throttled","throttle","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","handleForumPanelAnimationEnd","shouldRenderForumPanel","useGetSelectionRange","inputSelector","getRange","setRange","onSelectionChange","range","Element","useHorizontalScroll","shouldPreventDefault","handleScroll","deltaX","deltaY","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","HTMLElement","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","part","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","documentElement","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","isConnected","debugKey","prevDeps","useUniqueId","idRef","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","cacheBuster","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","useMouseInside","menuCloseTimeout","isMouseInside","markMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","useRunDebounced","CalendarModal","useSchedule","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","scheduledAt","getTime","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","useSendMessageAction","sendMessageAction","SEND_MESSAGE_ACTION_INTERVAL","initial","_signalRef$current","signalRef","createSignal","effect","isFirstRun","dependency","isSignal","subscribe","useEffectOnce","cleanupEffect","callback","savedCallback","mul_table","shg_table","boxBlurCanvasRGB","context","top_x","top_y","isNaN","imageData","pixels","rsum","gsum","bsum","p1","p2","yp","yi","yw","wm","hm","rad1","r","g","mul_sum","shg_sum","vmin","vmax","putImageData","WAITING","Symbol","HIGH_PRIORITY_QUALITY","LOW_PRIORITY_QUALITY","LOW_PRIORITY_QUALITY_SIZE_THRESHOLD","HIGH_PRIORITY_CACHE_MODULO","IS_SAFARI","instancesById","workers","createConnector","Worker","URL","lastWorkerIndex","static","args","params","instance","addContainer","onEnded","onLoop","initConfig","initRenderer","isSharedCanvas","containers","clearRect","imgSize","isAnimating","isWaiting","forceRestart","isPaused","isEnded","approxFrameIndex","stopFrameIndex","doPlay","every","frames","frame","prevFrameIndex","close","startFrameIndex","reduceFactor","setSpeed","speed","setNoLoop","newCoords","containerInfo","isJustCleaned","sizeFactor","calcSizeFactor","ensureCanvasSize","getFrame","HTMLDivElement","ImageData","isRendererInited","DPR","isDestroyed","clearCache","destroyRenderer","cacheModulo","setColor","newColor","workerIndex","cycleRestrict","request","onRendererInit","msPerFrame","framesCount","changeData","onChangeData","lastRenderAt","animate","frameIndex","requestFrame","cleanupPrevFrame","containerData","currentSpeed","delta","expectedNextFrameIndex","nextFrameIndex","onFrameLoad","imageBitmap","expectedWidth","expectedHeight","ConnectorClass","channel","init","postMessage","messageData","requestStates","requestStatesByCallback","requestState","promise","reject","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","update","response","callbackArgs","worker","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","stopCurrentAudio","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","currentId","queue","getTrackQueue","chatAudio","getMessageKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","IOS_SCREEN_EDGE_THRESHOLD","MOVED_THRESHOLD","SWIPE_THRESHOLD","RELEASE_WHEEL_ZOOM_DELAY","RELEASE_WHEEL_DRAG_DELAY","getDistance","a","hypot","pageX","pageY","getTouchCenter","lastClickTime","lethargy","stability","sensitivity","tolerance","lastUpDeltas","lastDownDeltas","deltasTimestamp","check","lastDelta","wheelDelta","detail","isInertia","lastDeltas","lastDeltasOld","lastDeltasNew","oldSum","t","newSum","oldAverage","newAverage","_options$initialZoom","_options$minZoom","_options$maxZoom","captureEvent","initialSwipeAxis","hasMoved","hasSwiped","isZooming","initialDistance","wheelZoom","initialZoom","initialDragOffset","isDragCanceled","initialTouchCenter","innerWidth","innerHeight","minZoom","maxZoom","excludedClosestSelector","withNativeDrag","onMove","withCursor","scrollable","overflow","onDoubleClick","centerX","centerY","clamp","onZoom","endDistance","touchCenter","dragOffsetX","dragOffsetY","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","shouldPreventScroll","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","releaseWheelDrag","releaseWheelZoom","onWheelCapture","onWheel","doubleTapZoom","is","metaKeyPressed","zoom","onWheelZoom","isUserEvent","sign","dx","dy","onWheelDrag","isNotPassive","fastSmoothScroll","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","scrollFrom","elementTop","scrollTop","offset","FocusDirection","calculateScrollFrom","scrollWithJs","isAnimatingScroll","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","path","remainingPath","absPath","transition","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","startAt","onHeavyAnimationStop","animateSingle","currentPath","DEFAULT_DURATION","stopById","fastSmoothScrollHorizontal","containerWidth","scrollId","isStopped","random","scrollSnapType","force","forcePlaceCaretAtEnd","createRange","lastChild","nodeValue","selectNodeContents","collapse","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","node","nodeType","contains","messageEl","firstChild","removeChild","isElementInViewport","display","windowHeight","windowSize","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","extractorEl","insertHtmlInSelection","deleteContents","fragment","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","setStart","fileSelector","openSystemFilesDialog","accept","noMultiple","onchange","click","TEXT_AI_THINKING"],"sourceRoot":""}